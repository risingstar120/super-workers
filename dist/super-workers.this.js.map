{"version":3,"sources":["webpack:///webpack/bootstrap 306301b4120916b12795","webpack:///./src/index.js","webpack:///./src/vendor/Promise.js","webpack:///./src/MainThread.js","webpack:///./src/RegisterWorker.js","webpack:///./src/vendor/uuid.js","webpack:///./src/TaskQueue.js","webpack:///./src/utils/array.js","webpack:///./src/enums/TaskStatusEnum.js","webpack:///./src/utils/worker.js","webpack:///./src/utils/generalUtils.js","webpack:///./src/enums/WarningTextEnum.js","webpack:///./src/enums/WorkerStatusEnum.js","webpack:///./src/enums/WorkerActionEnum.js","webpack:///./src/WorkerThread.js"],"names":["SuperWorkers","MainThread","WorkerThread","Promise","handler","self","_resolve","_reject","_process","CancellationError","message","stack","Error","prototype","constructor","name","TimeoutError","onFail","then","SyntaxError","_onSuccess","_onFail","onSuccess","push","_then","callback","resolve","reject","res","result","error","s","f","forEach","fn","cancel","timeout","timer","setTimeout","delay","always","clearTimeout","promises","remaining","length","results","p","i","resolver","promise","config","maxWorkers","minWorkers","window","navigator","hardwareConcurrency","Math","max","workers","init","getAll","getActive","getIdle","getTerminated","terminateAll","id","terminate","msg","broadCastAll","broadCastTo","method","params","Array","isArray","TypeError","defer","task","priority","LOW","taskQueue","_add","_runQueuedTask","tasks","terminateAllExceptOne","nextQueuedTask","getNextTask","availableWorker","register","runningOnWorkerId","_remove","status","QUEUED","ACTIVE","worker","sendMessage","taskId","action","EXEC","data","IDLE","catch","e","TERMINATED","_ensureMinWorkers","CONFIG_REQUIRED","url","URL_REQUIRED","_isWebWorkerSupported","console","warn","WORKER_NOT_SUPPORTED","allTasks","RegisterWorker","activeTasks","activeTasksRunningOnWorker","filter","addEventListener","onWorkerMessage","bind","onError","ev","_getCompleted","deSerializeError","totalJobsFailed","lastJobFaileddAt","Date","FAILED","output","totalJobsCompleted","lastJobCompletedAt","COMPLETED","generate","createdAt","Worker","READY","addEventListeners","addNew","UUID","rand","_getRandomInt","hex","_hexAligner","x","NaN","random","_getIntAligner","radix","num","str","toString","z","hexString","TaskQueue","Object","call","PENDING","_addToAllList","index","searchByKeyName","splice","get","sortOnStringType","getCompleted","getFailed","ArrayUtils","returnPreferenceEnum","INDEX","OBJECT","BOTH","key","value","returnPreference","obj","returnData","isNaN","parseInt","sortOn","arr","orderBy","sort","a","b","TaskStatusEnum","WorkerUtils","NO_ID_PROVIDED","WORKER_ALREADY_TERMINATED","exceptOne","nonTerminatedWorkers","concat","targetedWorker","target","isEncodedMethod","serializeFunction","stringifyJson","postMessage","GeneralUtils","isPromise","encodeURI","deSerializeFunction","decodeURI","serializeError","err","errProps","fakeError","props","keys","INVALID_JSON","JSON","stringify","parseJson","jsonParsedData","PARSE_JSON","parse","WarningTextEnum","INVALID_DATA","WorkerStatusEnum","WorkerActionEnum","methods","unlistenEvents","addListeners","origin","hasOwnProperty","messageData","_params","_fn","eval","apply","thenResult","removeEventListener","onMessage"],"mappings":"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","file":"super-workers.this.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 306301b4120916b12795\n **/","import Promise from './vendor/Promise';\n\nimport MainThread from './MainThread';\nimport WorkerThread from './WorkerThread';\n/**\n * Expose Parent and Child modules on SuperWorkers Object\n * @type {Object}\n */\nconst SuperWorkers = {\n  MainThread: MainThread,\n  WorkerThread: WorkerThread,\n  Promise: Promise\n};\n\nexport default SuperWorkers;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Inspired from - @josdejong(Github) - Promise.js\n *\n * ES6 port\n *\n * Promise polyfill\n *\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n */\nclass Promise {\n  constructor(handler) {\n    const self = this;\n    let _resolve, _reject, _process;\n\n    /**\n     * Create a cancellation error\n     * @param {String} [message]\n     * @extends Error\n     */\n    function CancellationError(message) {\n      this.message = message || 'promise cancelled';\n      this.stack = (new Error()).stack;\n    }\n\n    CancellationError.prototype = new Error();\n    CancellationError.prototype.constructor = Error;\n    CancellationError.prototype.name = 'CancellationError';\n\n    /**\n     * Create a timeout error\n     * @param {String} [message]\n     * @extends Error\n     */\n    function TimeoutError(message) {\n      this.message = message || 'timeout exceeded';\n      this.stack = (new Error()).stack;\n    }\n\n    TimeoutError.prototype = new Error();\n    TimeoutError.prototype.constructor = Error;\n    TimeoutError.prototype.name = 'TimeoutError';\n\n    this.CancellationError = CancellationError;\n    this.TimeoutError = TimeoutError;\n\n    /**\n     * Add an onFail callback to the Promise\n     * @param {Function} onFail\n     * @returns {Promise} promise\n     */\n    this['catch'] = function (onFail) {  // eslint-disable-line\n      return this.then(null, onFail);\n    };\n\n    if (!(this instanceof Promise)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (typeof handler !== 'function') {\n      throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n    }\n\n    const _onSuccess = [];\n    const _onFail = [];\n\n    /**\n     * Process onSuccess and onFail callbacks: add them to the queue.\n     * Once the promise is resolve, the function _promise is replace.\n     * @param {Function} onSuccess\n     * @param {Function} onFail\n     * @private\n     */\n    _process = (onSuccess, onFail) => {\n      _onSuccess.push(onSuccess);\n      _onFail.push(onFail);\n    };\n\n    /**\n     * Execute given callback, then call resolve/reject based on the returned result\n     * @param {Function} callback\n     * @param {Function} resolve\n     * @param {Function} reject\n     * @returns {Function}\n     * @private\n     */\n    function _then(callback, resolve, reject) {\n      return result => {\n        try {\n          const res = callback(result);\n\n          if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n            // method returned a promise\n            res.then(resolve, reject);\n          } else {\n            resolve(res);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n    }\n\n    /**\n     * Add an onSuccess callback and optionally an onFail callback to the Promise\n     * @param {Function} onSuccess\n     * @param {Function} [onFail]\n     * @returns {Promise} promise\n     */\n    this.then = (onSuccess, onFail) => new Promise((resolve, reject) => {\n      const s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      const f = onFail ? _then(onFail, resolve, reject) : reject;\n\n      _process(s, f);\n    }, self);\n\n    /**\n     * Resolve the promise\n     * @param {*} result\n     * @type {Function}\n     */\n    _resolve = result => {\n      _onSuccess.forEach(fn => {\n        fn(result);\n      });\n\n      _process = (onSuccess, onFail) => {\n        onSuccess(result);\n      };\n\n      _resolve = _reject = () => {\n        throw new Error('Promise is already resolved');\n      };\n\n      return self;\n    };\n\n    /**\n     * Reject the promise\n     * @param {Error} error\n     * @type {Function}\n     */\n    _reject = error => {\n      _onFail.forEach(fn => {\n        fn(error);\n      });\n\n      _process = (onSuccess, onFail) => {\n        onFail(error);\n      };\n\n      _resolve = _reject = () => {\n        throw new Error('Promise is already resolved');\n      };\n\n      return self;\n    };\n\n    /**\n     * Cancel te promise. This will reject the promise with a CancellationError\n     * @returns {Promise} self\n     */\n    this.cancel = () => {\n      _reject(new CancellationError());\n\n      return self;\n    };\n\n    /**\n     * Set a timeout for the promise. If the promise is not resolved within\n     * the time, the promise will be cancelled and a TimeoutError is thrown.\n     * If the promise is resolved in time, the timeout is removed.\n     * @param {number} delay     Delay in milliseconds\n     * @returns {Promise} self\n     */\n    this.timeout = delay => {\n      const timer = setTimeout(() => {\n        _reject(new TimeoutError(`Promise timed out after ${delay} ms`));\n      }, delay);\n\n      self.always(() => {\n        clearTimeout(timer);\n      });\n\n      return self;\n    };\n\n    // attach handler passing the resolve and reject functions\n    handler(result => {\n      _resolve(result);\n    }, error => {\n      _reject(error);\n    });\n  }\n\n  // TODO: add support for Promise.catch(Error, callback)\n  // TODO: add support for Promise.catch(Error, Error, callback)\n\n  /**\n   * Execute given callback when the promise either resolves or rejects.\n   * @param {Function} fn\n   * @returns {Promise} promise\n   */\n  always(fn) {\n    return this.then(fn, fn);\n  }\n\n  /**\n   * Create a promise which resolves when all provided promises are resolved,\n   * and fails when any of the promises resolves.\n   * @param {Promise[]} promises\n   * @returns {Promise} promise\n   */\n  static all(promises) {\n    return new Promise((resolve, reject) => {\n      let remaining = promises.length;\n      const results = [];\n\n      if (remaining) {\n        promises.forEach((p, i) => {\n          p.then(result => {\n            results[i] = result;\n            remaining--;\n            if (remaining === 0) {\n              resolve(results);\n            }\n          }, error => {\n            remaining = 0;\n            reject(error);\n          });\n        });\n      } else {\n        resolve(results);\n      }\n    });\n  }\n\n  /**\n   * Create a promise resolver\n   * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n   */\n  static defer() {\n    const resolver = {};\n\n    resolver.promise = new Promise((resolve, reject) => {\n      resolver.resolve = resolve;\n      resolver.reject = reject;\n    });\n\n    return resolver;\n  }\n}\n\nexport default Promise;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor/Promise.js\n **/","import RegisterWorker from './RegisterWorker';\n\nimport Promise from './vendor/Promise';\nimport TaskQueue from './TaskQueue';\n\nimport WorkerUtils from './utils/worker';\n\nimport WorkerActionEnum from './enums/WorkerActionEnum';\nimport TaskStatusEnum from './enums/TaskStatusEnum';\nimport WorkerStatusEnum from './enums/WorkerStatusEnum';\nimport WarningTextEnum from './enums/WarningTextEnum';\n\n// Named Class expression\nclass MainThread {\n  /**\n   * Involed when object is instantiated\n   * Set flags/variables and calls init method to attach event listeners\n   * @param  {Object} config - Refer API/docs for config keys\n   */\n  constructor(config) {\n    config = config || {};\n\n    if (typeof config.maxWorkers === 'undefined') {\n      config.minWorkers = 1;\n    }\n\n    if (typeof config.maxWorkers === 'undefined') {\n      config.maxWorkers = (window.navigator && window.navigator.hardwareConcurrency) || 3;\n    }\n\n    // max workers should not be less than min workers\n    config.maxWorkers = Math.max(config.maxWorkers, config.minWorkers);\n\n    // reset workers with every new Object\n    this.workers = WorkerUtils.workers = [];\n\n    Object.assign(this, config);\n    this.config = config;\n\n    WorkerUtils.config = config;\n\n    this.init();\n  };\n\n  /**\n   * Return list of all workers\n   * @return {Array}\n   */\n  getAllWorkers() {\n    return WorkerUtils.getAll();\n  };\n\n  /**\n   * Return list of all ACTIVE workers\n   * @return {Array}\n   */\n  getActiveWorkers() {\n    return WorkerUtils.getActive();\n  };\n\n  /**\n   * Return list of all IDLE workers\n   * @return {Array}\n   */\n  getIdleWorkers() {\n    return WorkerUtils.getIdle();\n  };\n\n  /**\n   * Return list of all CLOSED workers\n   * @return {Array}\n   */\n  getTerminatedWorkers() {\n    return WorkerUtils.getTerminated();\n  };\n\n  /**\n   * Terminate all workers at once\n   * @return {Object}\n   */\n  terminateAllWorkers() {\n    return WorkerUtils.terminateAll();\n  };\n\n  /**\n   * Terminate a specific worker\n   * @return {Object}\n   */\n  terminateWorker(id) {\n    return WorkerUtils.terminate(id);\n  };\n\n  /**\n   * Send a postmessage to all ACTIVE workers\n   * @return {Object}\n   */\n  broadCastAll(msg) {\n    return WorkerUtils.broadCastAll(msg);\n  };\n\n  /**\n   * Send a postmessage to a specific worker\n   * @return {Object}\n   */\n  broadCastTo(id, msg) {\n    return WorkerUtils.broadCastTo(id, msg);\n  };\n\n  /**\n   * API methods exposed for Public ends here\n   **/\n\n  exec(method, params, config) {\n    // validate type of arguments\n    if (params && !Array.isArray(params)) {\n      throw new TypeError('Array expected as argument \"params\"');\n    }\n\n    if (!config) {\n      config = {};\n    }\n\n    let resolver = Promise.defer();\n\n    let task = {};\n\n    Object.assign(task, config);\n    Object.assign(task, {\n      method: method,\n      params: params,\n      resolver: resolver,\n      priority: (config && config.priority) || TaskStatusEnum.LOW\n    });\n\n    this.taskQueue._add(task);\n    this._runQueuedTask();\n\n    return resolver.promise;\n  };\n\n  _runQueuedTask() {\n    if (!this.taskQueue.tasks.length) {\n      // Wait for some time for resolve/reject promises\n      setTimeout(() => {\n        WorkerUtils.terminateAllExceptOne(this.config.minWorkers);\n      }, 1000);\n    }\n\n    let nextQueuedTask = this.taskQueue.getNextTask(),\n      availableWorker = WorkerUtils.getIdle()[0];\n\n    if (!availableWorker && (WorkerUtils.getActive().length + WorkerUtils.getIdle().length < this.config.maxWorkers)) {\n      // create a new worker\n      this.register();\n      availableWorker = WorkerUtils.getIdle()[0];\n    }\n\n    if (availableWorker) {\n      nextQueuedTask.runningOnWorkerId = availableWorker.id;\n\n      // remove the task from queue list\n      this.taskQueue._remove(nextQueuedTask.id);\n      // if task is not already completed\n      if (nextQueuedTask.status === TaskStatusEnum.QUEUED) {\n        availableWorker.status = WorkerStatusEnum.ACTIVE;\n        nextQueuedTask.status = TaskStatusEnum.ACTIVE;\n\n        // send the request to worker to execute\n        availableWorker.worker.sendMessage(\n          availableWorker.worker, {\n            id: availableWorker.id,\n            resolver: nextQueuedTask.resolver,\n            taskId: nextQueuedTask.id,\n            method: nextQueuedTask.method,\n            params: nextQueuedTask.params,\n            action: WorkerActionEnum.EXEC\n          }\n        ).then((data) => {\n          availableWorker.status = WorkerStatusEnum.IDLE;\n          if (data) {\n            this._runQueuedTask(); // trigger next task in the queue\n          }\n        })\n        .catch((e) => {\n          // if the worker crashed and terminated, remove it from the pool\n          if (availableWorker.status === WorkerStatusEnum.TERMINATED) {\n            WorkerUtils.terminate(availableWorker.id);\n            // If minWorkers set, spin up new workers to replace the crashed ones\n            if (this.config.minWorkers) {\n              this._ensureMinWorkers();\n            }\n          } else {\n            availableWorker.status = WorkerStatusEnum.IDLE;\n          }\n          this._runQueuedTask(); // trigger next task in the queue\n        });\n      }\n    }\n  };\n\n  _ensureMinWorkers() {\n    for (let i = this.workers.length; i < this.config.minWorkers; i++) {\n      this.register();\n    }\n  };\n\n  /**\n   * Register a new worker. Config has to be passed with some required keys\n   * @return {Object} worker\n   */\n  register() {\n    let config = this.config;\n\n    if (!config) {\n      throw new Error(WarningTextEnum.CONFIG_REQUIRED);\n    }\n\n    let url = config.url;\n\n    if (!url) {\n      throw new Error(WarningTextEnum.URL_REQUIRED);\n    }\n\n    let worker = new RegisterWorker(config);\n\n    return worker;\n  };\n\n  /**\n   * Invoked on object instantiation unless user pass a key to call it explicitly\n   */\n  init() {\n    if (!WorkerUtils._isWebWorkerSupported()) {\n      console.warn(WarningTextEnum.WORKER_NOT_SUPPORTED);\n      return;\n    }\n\n    this.taskQueue = TaskQueue;\n    this.taskQueue.tasks = [];\n    this.taskQueue.allTasks = [];\n  };\n};\n\nexport default MainThread;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/MainThread.js\n **/","import UUID from './vendor/uuid';\nimport TaskQueue from './TaskQueue';\nimport WorkerUtils from './utils/worker';\nimport GeneralUtils from './utils/generalUtils';\nimport TaskStatusEnum from './enums/TaskStatusEnum';\nimport WorkerStatusEnum from './enums/WorkerStatusEnum';\nimport WorkerActionEnum from './enums/WorkerActionEnum';\n\n// Named Class expression\nclass RegisterWorker {\n  /**\n   * Invoked when the object is instantiated\n   */\n  constructor(config) {\n    this.init(config);\n  };\n  // reject all running tasks on worker error\n  onError(error) {\n    this.status = WorkerStatusEnum.TERMINATED;\n    let activeTasks = TaskQueue.getActive(),\n      activeTasksRunningOnWorker = [];\n\n    if (activeTasks && activeTasks.length) {\n      activeTasksRunningOnWorker = activeTasks.filter(task => task.runningOnWorkerId === this.id);\n    }\n\n    for (let i = 0; i < activeTasksRunningOnWorker.length; i++) {\n      activeTasksRunningOnWorker[i].resolver.reject(error);\n    }\n\n    return activeTasksRunningOnWorker;\n  };\n\n   /**\n   * Attach postmessage, native and custom listeners to the window\n   */\n  addEventListeners() {\n    this.worker.addEventListener('message', this.onWorkerMessage.bind(this), false);\n    // listen for worker messages error\n    this.worker.addEventListener('error', this.onError.bind(this));\n    // listen for worker messages exit\n    this.worker.addEventListener('exit', () => {\n      let error = new Error('Worker terminated unexpectedly');\n\n      this.onError(error).bind(this);\n    });\n  };\n\n  onWorkerMessage(ev) {\n    if (!ev || !ev.data || ev.data.action !== WorkerActionEnum.EXEC) {\n      return false;\n    }\n\n    let task = TaskQueue._getCompleted(ev.data.taskId);\n\n    if (ev.data.error) {\n      if (task.resolver && typeof task.resolver.reject === 'function') {\n        task.resolver.reject(GeneralUtils.deSerializeError(ev.data.error));\n      }\n      this.totalJobsFailed += 1;\n      this.lastJobFaileddAt = +new Date();\n      task.status = TaskStatusEnum.FAILED;\n      task.output = TaskStatusEnum.FAILED;\n      if (task.onError && typeof task.onError === 'function') {\n        task.onError();\n      }\n      return false;\n    }\n    if (task.resolver && typeof task.resolver.resolve === 'function') {\n      task.resolver.resolve(ev.data.result);\n    }\n    this.totalJobsCompleted += 1;\n    this.lastJobCompletedAt = +new Date();\n    task.status = TaskStatusEnum.COMPLETED;\n    task.output = ev.data.result;\n    if (task.onSuccess && typeof task.onSuccess === 'function') {\n      task.onSuccess();\n    }\n    return true;\n  };\n  /**\n   * Open a new tab\n   * @param  {Object} config - Refer API for config keys\n   * @return {Object} this\n   */\n  init(config) {\n    config = config || {};\n\n    Object.assign(this, config);\n    this.id = UUID.generate() || (WorkerUtils.workers.length + 1);\n    this.status = WorkerStatusEnum.IDLE;\n    this.createdAt = +new Date();\n    this.lastJobCompletedAt = null;\n    this.totalJobsCompleted = 0;\n    this.totalJobsFailed = 0;\n\n    this.worker = new Worker(config.url);\n\n    WorkerUtils.sendMessage(this.worker, {\n      id: this.id,\n      action: WorkerActionEnum.READY,\n      message: 'Worker is ready.'\n    });\n\n    // TODO: only add methods which are needed\n    Object.assign(this.worker, {\n      sendMessage: WorkerUtils.sendMessage\n    });\n\n    // Add Worker event-listeners\n    this.addEventListeners();\n\n    // Push it to the list of workers\n    WorkerUtils.addNew(this);\n\n     // Return reference for chaining purpose\n    return this;\n  };\n};\n\nexport default RegisterWorker;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/RegisterWorker.js\n **/","/**\n * UUID.js: The RFC-compliant UUID generator for JavaScript.\n * ES6 port of only `generate` method of UUID by Varun Malhotra under MIT License\n *\n * @author  LiosK\n * @version v3.3.0\n * @license The MIT License: Copyright (c) 2010-2016 LiosK.\n */\n\n/** @constructor */\nlet UUID;\n\nUUID = (function () {\n  'use strict';\n\n  /** @lends UUID */\n  function UUID() {}\n\n  /**\n   * The simplest function to get an UUID string.\n   * @returns {string} A version 4 UUID string.\n   */\n  UUID.generate = function () {\n    let rand = UUID._getRandomInt, hex = UUID._hexAligner;\n\n    // [\"timeLow\", \"timeMid\", \"timeHiAndVersion\", \"clockSeqHiAndReserved\", \"clockSeqLow\", \"node\"]\n    return hex(rand(32), 8) +           // time_low\n      '-' +\n      hex(rand(16), 4) +                // time_mid\n      '-' +\n      hex(0x4000 | rand(12), 4) +       // time_hi_and_version\n      '-' +\n      hex(0x8000 | rand(14), 4) +       // clock_seq_hi_and_reserved clock_seq_low\n      '-' +\n      hex(rand(48), 12);                // node\n  };\n\n  /**\n   * Returns an unsigned x-bit random integer.\n   * @param {int} x A positive integer ranging from 0 to 53, inclusive.\n   * @returns {int} An unsigned x-bit random integer (0 <= f(x) < 2^x).\n   */\n  UUID._getRandomInt = function (x) {\n    if (x < 0) {\n      return NaN;\n    }\n    if (x <= 30) {\n      return (0 | Math.random() * (1 << x));\n    }\n    if (x <= 53) {\n      return (0 | Math.random() * (1 << 30)) +\n        (0 | Math.random() * (1 << x - 30)) * (1 << 30);\n    }\n\n    return NaN;\n  };\n\n  /**\n   * Returns a function that converts an integer to a zero-filled string.\n   * @param {int} radix\n   * @returns {function(num&#44; length)}\n   */\n  UUID._getIntAligner = function (radix) {\n    return function (num, length) {\n      let str = num.toString(radix), i = length - str.length, z = '0';\n\n      for (; i > 0; i >>>= 1, z += z) {\n        if (i & 1) {\n          str = z + str;\n        }\n      }\n      return str;\n    };\n  };\n\n  UUID._hexAligner = UUID._getIntAligner(16);\n\n  /**\n   * Returns UUID string representation.\n   * @returns {string} {@link UUID#hexString}.\n   */\n  UUID.prototype.toString = function () {\n    return this.hexString;\n  };\n\n  return UUID;\n\n})(UUID);\n\nexport default UUID;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor/uuid.js\n **/","import UUID from './vendor/uuid';\nimport ArrayUtils from './utils/array';\nimport TaskStatusEnum from './enums/TaskStatusEnum';\n\nlet TaskQueue = {\n  config: {},\n  tasks: [],\n  allTasks: [],\n\n  /**\n   * Add task to the queue\n   * @param {Object} task - with proper config\n   */\n  _add: (task) => {\n    if (!task) { throw new Error('No task passed for queuing'); }\n\n    if (Object.prototype.toString.call(task) !== '[object Object]') {\n      throw new Error('Task should be an object');\n    }\n\n    task.id = UUID.generate() || TaskQueue.tasks.length;\n    task.status = TaskStatusEnum.QUEUED;\n    task.output = TaskStatusEnum.PENDING;\n    TaskQueue.tasks.push(task);\n    TaskQueue._addToAllList(task);\n  },\n  _addToAllList: (task) => {\n    if (!task) { throw new Error('No task passed for queuing'); }\n\n    if (Object.prototype.toString.call(task) !== '[object Object]') { throw new Error('Task should be an object'); }\n\n    TaskQueue.allTasks.push(task);\n  },\n  /**\n   * Remove a task from the queue\n   * @param {Number} task\n   */\n  _remove: (id) => {\n    if (!id) { throw new Error('No id passed'); }\n\n    let index;\n\n    index = ArrayUtils.searchByKeyName(TaskQueue.tasks, 'id', id, 'index');\n    if (index !== -1) {\n      TaskQueue.tasks.splice(index, 1);\n    }\n\n    return this;\n  },\n  _getCompleted: (id) => {\n    if (!id) { throw new Error('No id passed'); }\n\n    let task = ArrayUtils.searchByKeyName(TaskQueue.allTasks, 'id', id);\n\n    return task || {};\n  },\n  /**\n   * Get the task from the queue\n   * @param {id} task\n   * @return {Object} task being queried or an empty Object(if not found)\n   */\n  get: (id) => {\n    if (!id) { return TaskQueue.tasks[0] || {}; }\n\n    let task = ArrayUtils.searchByKeyName(TaskQueue.tasks, 'id', id);\n\n    return task || {};\n  },\n  /**\n   * Get next available task from the queue\n   * @return {Object} task being queried or an empty Object(if not found)\n   */\n  getNextTask: () => {\n    // Sort as per task priorities\n    ArrayUtils.sortOnStringType(TaskQueue.tasks, 'priority');\n    return TaskQueue.get();\n  },\n  /**\n   * Filter out all the active tasks\n   * @return {Array} - only the active tasks\n   */\n  getActive: () => {\n    return TaskQueue.tasks.filter(task => task.status === TaskStatusEnum.ACTIVE);\n  },\n  /**\n   * Filter out all the completed tasks\n   * @return {Array} - only the completed tasks\n   */\n  getCompleted: () => {\n    return TaskQueue.tasks.filter(task => task.status === TaskStatusEnum.COMPLETED);\n  },\n  /**\n   * Filter out all the failed tasks\n   * @return {Array} - only the failed tasks\n   */\n  getFailed: () => {\n    return TaskQueue.tasks.filter(task => task.status === TaskStatusEnum.FAILED);\n  },\n  /**\n   * To get list of all tasks\n   * @return {Array} - list of all tasks\n   */\n  getAll: () => {\n    return TaskQueue.tasks;\n  }\n};\n\nexport default TaskQueue;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TaskQueue.js\n **/","let ArrayUtils = {};\n\n/**\n * Different type of data needed after searching an item(Object) within data(Array of Objects).\n * 1. `INDEX` returns just the index at which the item was present\n * 2. `OBJECT` returns the matched object\n * 3. `BOTH` returns an object { obj: matched_object, index: index_found }\n */\nlet returnPreferenceEnum = {\n  INDEX: 'index',\n  OBJECT: 'object',\n  BOTH: 'both'\n};\n\n/**\n * Search for an item(Object) within a data-set(Array Of Objects)\n * @param  {Array of Objects} data\n * @param  {String} key - Unique key to search on the basis of\n * @param  {String} value - The matching criteria\n * @param  {String} returnPreference - what kind of output is needed\n * @return {Object}\n */\nArrayUtils.searchByKeyName = (data, key, value, returnPreference) => {\n  if (!data || !key) { return false; }\n\n  returnPreference = returnPreference || returnPreferenceEnum[1]; // default to Object\n  let i, obj, returnData, index = -1;\n\n  for (i = 0; i < data.length; i++) {\n    obj = data[i];\n    // Number matching support\n    if (!isNaN(value) && obj && parseInt(obj[key], 10) === parseInt(value, 10)) {\n      index = i;\n      break;\n    } else if (isNaN(value) && obj && obj[key] === value) { // String exact matching support\n      index = i;\n      break;\n    }\n  }\n\n  if (index === -1) { // item not found\n    data[index] = {}; // for consistency\n  }\n\n  switch (returnPreference) {\n    case returnPreferenceEnum.INDEX:\n      returnData = index;\n      break;\n    case returnPreferenceEnum.BOTH:\n      returnData = {\n        obj: data[index],\n        index: index\n      };\n      break;\n    case returnPreferenceEnum.OBJECT:\n    default:\n      returnData = data[index];\n      break;\n  }\n\n  return returnData;\n};\n\n/**\n * Sort array based on key defined.\n * @param {Array} arr - Array to be sorted\n * @param {String} key - key on which sort is required\n * @param {Boolean} orederBy - Sort in asc/desc order. If nothing is specified, it's ascending order.\n */\nArrayUtils.sortOn = (arr, key, orderBy) => {\n  arr.sort(function (a, b) {\n    return orderBy ? b[key] - a[key] : a[key] - b[key];\n  });\n};\n\n/**\n * Sort array based on key:String defined.\n * @param {Array} arr - Array to be sorted\n * @param {String} key - key on which sort is required\n * @param {Boolean} orederBy - Sort in asc/desc order. If nothing is specified, it's ascending order.\n */\nArrayUtils.sortOnStringType = (arr, key) => {\n  arr.sort(function (a, b) {\n    if (a[key] < b[key]) {\n      return -1;\n    } else if (a[key] > b[key]) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nexport default ArrayUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/array.js\n **/","/**\n * Enum for Worker status(still active / idle) used for client-worker-communication\n * @type {Object}\n */\nconst TaskStatusEnum = {\n  PENDING: 'pending',\n  QUEUED: 'queued',\n  ACTIVE: 'active',\n  FAILED: 'failed',\n  COMPLETED: 'completed'\n};\n\nexport default TaskStatusEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/TaskStatusEnum.js\n **/","/**\n * A Tab utility file to deal with tab operations\n */\nimport Promise from '../vendor/Promise';\nimport ArrayUtils from './array';\nimport GeneralUtils from './generalUtils';\n\nimport WorkerStatusEnum from '../enums/WorkerStatusEnum';\nimport WarningTextEnum from '../enums/WarningTextEnum';\n\nlet WorkerUtils = {\n  workers: [],\n  config: {},\n\n  /**\n   * Check is worker is present on window\n   * @return {Boolean} [description]\n   */\n  _isWebWorkerSupported: () => {\n    if (typeof window.Worker === 'function' ||\n      (typeof window.Worker === 'object' || typeof Worker.prototype.constructor === 'function')) {\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Remove a tab from a list of all workers.\n   * This is required when users opts for removing the idle workers from the list of workers.\n   * This can be done explictly by passing `removeidleworkers` key while instantiating Parent.\n   * @param  {Object} tab\n   */\n  _remove: (worker) => {\n    let index;\n\n    index = ArrayUtils.searchByKeyName(WorkerUtils.workers, 'id', worker.id, 'index');\n    WorkerUtils.workers.splice(index, 1);\n  },\n\n  /**\n   * Add a new worker to the Array of workers\n   * @param  {Object} worker\n   * @return {Object} - this\n   */\n  addNew: (worker) => {\n    WorkerUtils.workers.push(worker);\n    return this;\n  },\n  /**\n   * Filter out all the active workers\n   * @return {Array} - only the active workers\n   */\n  getActive: () => {\n    return WorkerUtils.workers.filter(worker => worker.status === WorkerStatusEnum.ACTIVE);\n  },\n  /**\n   * Filter out all the idle workers\n   * @return {Array} - only the idle workers\n   */\n  getIdle: () => {\n    return WorkerUtils.workers.filter(worker => worker.status === WorkerStatusEnum.IDLE);\n  },\n  /**\n   * Filter out all the terminated workers\n   * @return {Array} - only the idle workers\n   */\n  getTerminated: () => {\n    return WorkerUtils.workers.filter(worker => worker.status === WorkerStatusEnum.TERMINATED);\n  },\n  /**\n   * To get list of all workers(idle/active).\n   * Note: idle workers will not be returned if `removeidleworkers` key is paased while instantiaiting Parent.\n   * @return {Array} - list of all workers\n   */\n  getAll: () => {\n    return WorkerUtils.workers;\n  },\n\n  /**\n   * Terminate a specific tab\n   * @param  {String} id\n   * @return {Object} this\n   */\n  terminate: (id) => {\n    if (!id) {\n      console.warn(WarningTextEnum.NO_ID_PROVIDED);\n      return WorkerUtils;\n    }\n\n    let worker = ArrayUtils.searchByKeyName(WorkerUtils.workers, 'id', id, 'object');\n\n    if (worker && worker.worker &&\n      worker.status === WorkerStatusEnum.TERMINATED\n    ) {\n      console.warn(WarningTextEnum.WORKER_ALREADY_TERMINATED);\n      return WorkerUtils;\n    }\n\n    if (worker && worker.worker &&\n      worker.worker.terminate\n    ) {\n      worker.worker.terminate();\n      worker.status = WorkerStatusEnum.TERMINATED;\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Terminate all (active+idle) workers using a native method `Terminate` available on window.open reference.\n   * @return {WorkerUtils} this\n   */\n  terminateAllExceptOne: (minWorkers) => {\n    return WorkerUtils.terminateAll(true, minWorkers || 1);\n  },\n  /**\n   * Terminate all active workers using a native method `Terminate` available on window.open reference.\n   * @return {WorkerUtils} this\n   */\n  terminateAll: (exceptOne, minWorkers) => {\n    let i,\n      nonTerminatedWorkers;\n\n    if (exceptOne) {\n      // terminate only idle workers\n      nonTerminatedWorkers = [].concat(WorkerUtils.getIdle());\n    } else {\n      nonTerminatedWorkers = [].concat(WorkerUtils.getActive()).concat(WorkerUtils.getIdle());\n    }\n\n    for (i = 0; i < nonTerminatedWorkers.length; i++) {\n      // ensure minWorkers should be there\n      if (exceptOne && WorkerUtils.getIdle() && WorkerUtils.getIdle().length <= minWorkers) {\n        return WorkerUtils;\n      }\n\n      if (nonTerminatedWorkers[i] &&\n        nonTerminatedWorkers[i].worker &&\n        nonTerminatedWorkers[i].worker.terminate\n      ) {\n        nonTerminatedWorkers[i].worker.terminate();\n        nonTerminatedWorkers[i].status = WorkerStatusEnum.TERMINATED;\n      }\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Send a postmessage to every active Child tab(excluding itself i.e Parent Tab)\n   * @param  {String} config\n   */\n  broadCastAll: (config) => {\n    let i, workers = WorkerUtils.getActive() || [];\n\n    for (i = 0; i < workers.length; i++) {\n      WorkerUtils.sendMessage(workers[i], config);\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Send a postmessage to a specific Child tab\n   * @param  {String} id\n   * @param  {String} config\n   */\n  broadCastTo: (id, config) => {\n    let targetedWorker,\n      workers = [].concat(WorkerUtils.getActive()).concat(WorkerUtils.getIdle());\n\n    targetedWorker = ArrayUtils.searchByKeyName(workers, 'id', id);\n    if (targetedWorker) {\n      WorkerUtils.sendMessage(targetedWorker, config);\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Send a postMessage to the desired window/frame\n   * @param  {Object}  target\n   * @param  {String}  msg\n   */\n  sendMessage: (target, config) => {\n    let msg,\n      isEncodedMethod = false;\n\n    config = config || {};\n    if (config.method && typeof config.method === 'function') {\n      config.method = GeneralUtils.serializeFunction(config.method);\n      isEncodedMethod = true;\n    }\n\n    if (!config.resolver) {\n      config.resolver = Promise.defer();\n    }\n\n    msg = {\n      id: config.id,\n      taskId: config.taskId,\n      method: config.method,\n      params: config.params,\n      action: config.action,\n      isEncodedMethod\n    };\n\n    msg = GeneralUtils.stringifyJson(msg);\n\n    if (target && target.postMessage) {\n      target.postMessage(msg);\n    }\n\n    return config.resolver.promise;\n  }\n};\n\nexport default WorkerUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/worker.js\n **/","import WarningTextEnum from '../enums/WarningTextEnum';\n\nlet GeneralUtils = {\n  isPromise: (value) => {\n    return value && (typeof value.then === 'function');\n  },\n  serializeFunction: (fn) => {\n    if (!fn || typeof fn !== 'function') { return false; }\n\n    return encodeURI(fn.toString());\n  },\n  deSerializeFunction: (fn) => {\n    if (!fn || typeof fn !== 'string') { return false; }\n\n    return decodeURI(fn);\n  },\n  serializeError: (error) => {\n    let i, err = {},\n      errProps = [ 'name', 'message', 'stack', 'custom' ];\n\n    if (error instanceof Error) {\n      for (i = errProps.length - 1; i >= 0; i--) {\n        err[errProps[i]] = error[errProps[i]];\n      }\n      return err;\n    }\n\n    return err;\n  },\n  deSerializeError: (error) => {\n    let i, fakeError = new Error('');\n\n    if (!error) {\n      return fakeError;\n    }\n\n    let props = Object.keys(error);\n\n    for (i = 0; i < props.length; i++) {\n      fakeError[props[i]] = error[props[i]];\n    }\n\n    return fakeError;\n  },\n  /**\n   * Stringify Object\n   * @param  {String} data\n   * @param  {String} err  - Message to be thrown if not valid object\n   * @return {Object}      - stringified json\n   */\n  stringifyJson: function (data, err) {\n    err = err || WarningTextEnum.INVALID_JSON;\n    try {\n      data = JSON.stringify(data);\n    } catch (e) {\n      console.warn(err);\n    }\n\n    return data;\n  },\n  /**\n   * Parse sringified data\n   * @param  {String} data\n   * @param  {String} err  - Message to be thrown if not valid json\n   * @return {Object}      - parsed json\n   */\n  parseJson: function (data, err) {\n    let jsonParsedData;\n\n    err = err || WarningTextEnum.PARSE_JSON;\n    try {\n      jsonParsedData = JSON.parse(data);\n    } catch (e) {\n      console.warn(err);\n    }\n\n    return jsonParsedData;\n  }\n};\n\nexport default GeneralUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/generalUtils.js\n **/","/**\n * Enum for showing various warnings to suser when things done wrong\n * @type {Object}\n */\nconst WarningTextEnum = {\n  INVALID_JSON: 'Invalid JSON Object!',\n  PARSE_JSON: 'Can not parse stringifed data',\n  NO_ID_PROVIDED: 'Valid worker id should be provided',\n  INVALID_DATA: 'Some wrong message is being sent by Parent.',\n  WORKER_ALREADY_TERMINATED: 'Web Worker has already been terminated.',\n  CONFIG_REQUIRED: 'Configuration options required. Please read docs.',\n  WORKER_NOT_SUPPORTED: 'Web Worker not supported on this browser version',\n  URL_REQUIRED: 'Url is needed for creating and opening a new window/tab. Please read docs.'\n};\n\nexport default WarningTextEnum;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WarningTextEnum.js\n **/","/**\n * Enum for Worker status(still active / idle) used for client-worker-communication\n * @type {Object}\n */\nconst WorkerStatusEnum = {\n  IDLE: 'idle',\n  ACTIVE: 'active',\n  TERMINATED: 'terminated'\n};\n\nexport default WorkerStatusEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WorkerStatusEnum.js\n **/","/**\n * Enum for Worker action\n * @type {Object}\n */\nconst WorkerActionEnum = {\n  READY: 'ready',\n  EXEC: 'execute'\n};\n\nexport default WorkerActionEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WorkerActionEnum.js\n **/","import GeneralUtils from './utils/generalUtils';\nimport WorkerActionEnum from './enums/WorkerActionEnum';\n\n// Named Class expression\nclass WorkerThread {\n  /**\n   * Involed when object is instantiated\n   * Set flags/variables and calls init method to attach event listeners\n   * @param  {Object} config - Refer API/docs for config keys\n   */\n  constructor(config) {\n    if (!config) {\n      config = {};\n    }\n\n    Object.assign(this, config);\n    this.config = config;\n\n    this.methods = {};\n    if (!config.unlistenEvents) {\n      this.addListeners();\n    }\n  };\n\n  sendMessage(obj, origin) {\n    if (origin) {\n      postMessage(obj, origin);\n    } else {\n      postMessage(obj);\n    }\n  };\n\n  exposeMethods(methods) {\n    if (!methods || Object.prototype.toString.call(methods) !== '[object Object]') {\n      throw new Error('ExposeMethods function expects object');\n    }\n\n    for (let method in methods) {\n      let fn = methods[method];\n\n      if (methods.hasOwnProperty(method) && typeof fn === 'function') {\n        this.methods[method] = fn;\n      }\n    }\n  }\n\n  onMessage(ev) {\n    let result, messageData;\n\n    messageData = GeneralUtils.parseJson(ev.data) || {};\n    if (messageData && messageData.action === WorkerActionEnum.EXEC) {\n      if (messageData.method) {\n        let _params = messageData.params;\n\n        try {\n          let _fn, method;\n\n          if (messageData.isEncodedMethod) {\n            _fn = GeneralUtils.deSerializeFunction(messageData.method);\n          } else {\n            _fn = this.methods[messageData.method];\n          }\n\n          method = eval('(' + _fn + ')'); // eslint-disable-line\n\n          result = method.apply(method, _params);\n          if (GeneralUtils.isPromise(result)) {\n            result.then((thenResult) => {\n              this.sendMessage({\n                id: messageData.id,\n                taskId: messageData.taskId,\n                action: messageData.action,\n                result: thenResult,\n                error: null\n              }, ev.origin);\n            })\n            .catch((e) => {\n              this.sendMessage({\n                id: messageData.id,\n                taskId: messageData.taskId,\n                action: messageData.action,\n                result: null,\n                error: GeneralUtils.serializeError(e)\n              }, ev.origin);\n            });\n          } else {\n            this.sendMessage({\n              id: messageData.id,\n              taskId: messageData.taskId,\n              action: messageData.action,\n              result: result,\n              error: null\n            }, ev.origin);\n          }\n        } catch (e) {\n          this.sendMessage({\n            id: messageData.id,\n            taskId: messageData.taskId,\n            action: messageData.action,\n            result: null,\n            error: GeneralUtils.serializeError(e)\n          }, ev.origin);\n        }\n      }\n    } else {\n      this.sendMessage({\n        id: messageData.id,\n        taskId: messageData.taskId,\n        action: messageData.action\n      }, ev.origin);\n    }\n  }\n\n  /**\n   * Attach sendmessage and onbeforeunload event listeners\n   */\n  addListeners() {\n    removeEventListener('message', this.onMessage.bind(this));\n    addEventListener('message', this.onMessage.bind(this));\n  };\n\n  /**\n   * API starts here ->\n   */\n\n  /**\n   * API ends here ->\n   */\n};\n\nexport default WorkerThread;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/WorkerThread.js\n **/"],"sourceRoot":""}