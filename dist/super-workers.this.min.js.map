{"version":3,"sources":["webpack:///super-workers.this.min.js","webpack:///webpack/bootstrap e82a576883658f41d9fd","webpack:///./src/index.js","webpack:///./src/vendor/Promise.js","webpack:///./src/MainThread.js","webpack:///./src/RegisterWorker.js","webpack:///./src/vendor/uuid.js","webpack:///./src/TaskQueue.js","webpack:///./src/utils/array.js","webpack:///./src/enums/TaskStatusEnum.js","webpack:///./src/utils/worker.js","webpack:///./src/utils/generalUtils.js","webpack:///./src/enums/WarningTextEnum.js","webpack:///./src/enums/WorkerStatusEnum.js","webpack:///./src/enums/WorkerActionEnum.js","webpack:///./src/WorkerThread.js"],"names":["this","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Promise","_Promise2","_MainThread","_MainThread2","_WorkerThread","_WorkerThread2","SuperWorkers","MainThread","WorkerThread","Promise","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","handler","CancellationError","message","stack","Error","TimeoutError","_then","callback","resolve","reject","result","res","then","error","self","_resolve","_reject","_process","constructor","name","onFail","SyntaxError","_onSuccess","_onFail","onSuccess","push","s","f","forEach","fn","cancel","timeout","delay","timer","setTimeout","always","clearTimeout","promises","remaining","results","resolver","promise","_extends","assign","arguments","source","hasOwnProperty","_RegisterWorker","_RegisterWorker2","_TaskQueue","_TaskQueue2","_worker","_worker2","_WorkerActionEnum","_WorkerActionEnum2","_TaskStatusEnum","_TaskStatusEnum2","_WorkerStatusEnum","_WorkerStatusEnum2","_WarningTextEnum","_WarningTextEnum2","config","maxWorkers","minWorkers","window","navigator","hardwareConcurrency","Math","max","workers","init","getAll","getActive","getIdle","getTerminated","terminateAll","terminate","msg","broadCastAll","broadCastTo","method","params","Array","isArray","defer","task","priority","LOW","taskQueue","_add","_runQueuedTask","_this","tasks","terminateAllExceptOne","nextQueuedTask","getNextTask","availableWorker","register","runningOnWorkerId","_remove","status","QUEUED","ACTIVE","worker","sendMessage","taskId","action","EXEC","data","IDLE","e","TERMINATED","_ensureMinWorkers","CONFIG_REQUIRED","url","URL_REQUIRED","_isWebWorkerSupported","console","warn","WORKER_NOT_SUPPORTED","_uuid","_uuid2","_generalUtils","_generalUtils2","RegisterWorker","activeTasks","activeTasksRunningOnWorker","filter","_this2","addEventListener","onWorkerMessage","bind","onError","ev","_getCompleted","deSerializeError","totalJobsFailed","lastJobFaileddAt","Date","totalJobsCompleted","lastJobCompletedAt","generate","createdAt","Worker","READY","addEventListeners","addNew","UUID","rand","_getRandomInt","hex","_hexAligner","x","NaN","random","_getIntAligner","radix","num","str","toString","z","hexString","_array","_array2","TaskQueue","completedTasks","_addToCompletedList","searchByKeyName","index","splice","get","sortOnStringType","getCompleted","COMPLETED","getFailed","FAILED","ArrayUtils","returnPreferenceEnum","INDEX","OBJECT","BOTH","returnPreference","returnData","isNaN","parseInt","sortOn","arr","orderBy","sort","a","b","TaskStatusEnum","_typeof","Symbol","iterator","WorkerUtils","NO_ID_PROVIDED","WORKER_ALREADY_TERMINATED","exceptOne","nonTerminatedWorkers","concat","targetedWorker","isEncodedMethod","serializeFunction","stringifyJson","postMessage","GeneralUtils","isPromise","encodeURI","deSerializeFunction","decodeURI","serializeError","err","errProps","fakeError","keys","INVALID_JSON","JSON","stringify","parseJson","jsonParsedData","PARSE_JSON","parse","WarningTextEnum","INVALID_DATA","WorkerStatusEnum","WorkerActionEnum","methods","unlistenEvents","addListeners","origin","onMessage","messageData","_params","_fn","eval","apply","thenResult","removeEventListener"],"mappings":"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","file":"super-workers.this.min.js","sourcesContent":["/*!\n * \n * super-workers \"0.1.0\"\n * https://github.com/softvar/super-workers.js\n * MIT LICENSE\n * \n * Copyright (C) 2017-2018 softvar - A project by Varun Malhotra(https://github.com/softvar)\n * \n */\nthis[\"SuperWorkers\"] =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Promise = __webpack_require__(1);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _MainThread = __webpack_require__(2);\n\t\n\tvar _MainThread2 = _interopRequireDefault(_MainThread);\n\t\n\tvar _WorkerThread = __webpack_require__(13);\n\t\n\tvar _WorkerThread2 = _interopRequireDefault(_WorkerThread);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Expose Parent and Child modules on SuperWorkers Object\n\t * @type {Object}\n\t */\n\tvar SuperWorkers = {\n\t  MainThread: _MainThread2.default,\n\t  WorkerThread: _WorkerThread2.default,\n\t  Promise: _Promise2.default\n\t};\n\t\n\texports.default = SuperWorkers;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Inspired from - @josdejong(Github) - Promise.js\n\t *\n\t * ES6 port\n\t *\n\t * Promise polyfill\n\t *\n\t * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n\t */\n\tvar Promise = function () {\n\t  function Promise(handler) {\n\t    _classCallCheck(this, Promise);\n\t\n\t    var self = this;\n\t    var _resolve2 = void 0,\n\t        _reject2 = void 0,\n\t        _process = void 0;\n\t\n\t    /**\n\t     * Create a cancellation error\n\t     * @param {String} [message]\n\t     * @extends Error\n\t     */\n\t    function CancellationError(message) {\n\t      this.message = message || 'promise cancelled';\n\t      this.stack = new Error().stack;\n\t    }\n\t\n\t    CancellationError.prototype = new Error();\n\t    CancellationError.prototype.constructor = Error;\n\t    CancellationError.prototype.name = 'CancellationError';\n\t\n\t    /**\n\t     * Create a timeout error\n\t     * @param {String} [message]\n\t     * @extends Error\n\t     */\n\t    function TimeoutError(message) {\n\t      this.message = message || 'timeout exceeded';\n\t      this.stack = new Error().stack;\n\t    }\n\t\n\t    TimeoutError.prototype = new Error();\n\t    TimeoutError.prototype.constructor = Error;\n\t    TimeoutError.prototype.name = 'TimeoutError';\n\t\n\t    this.CancellationError = CancellationError;\n\t    this.TimeoutError = TimeoutError;\n\t\n\t    /**\n\t     * Add an onFail callback to the Promise\n\t     * @param {Function} onFail\n\t     * @returns {Promise} promise\n\t     */\n\t    this['catch'] = function (onFail) {\n\t      // eslint-disable-line\n\t      return this.then(null, onFail);\n\t    };\n\t\n\t    if (!(this instanceof Promise)) {\n\t      throw new SyntaxError('Constructor must be called with the new operator');\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n\t    }\n\t\n\t    var _onSuccess = [];\n\t    var _onFail = [];\n\t\n\t    /**\n\t     * Process onSuccess and onFail callbacks: add them to the queue.\n\t     * Once the promise is resolve, the function _promise is replace.\n\t     * @param {Function} onSuccess\n\t     * @param {Function} onFail\n\t     * @private\n\t     */\n\t    _process = function _process(onSuccess, onFail) {\n\t      _onSuccess.push(onSuccess);\n\t      _onFail.push(onFail);\n\t    };\n\t\n\t    /**\n\t     * Execute given callback, then call resolve/reject based on the returned result\n\t     * @param {Function} callback\n\t     * @param {Function} resolve\n\t     * @param {Function} reject\n\t     * @returns {Function}\n\t     * @private\n\t     */\n\t    function _then(callback, resolve, reject) {\n\t      return function (result) {\n\t        try {\n\t          var res = callback(result);\n\t\n\t          if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n\t            // method returned a promise\n\t            res.then(resolve, reject);\n\t          } else {\n\t            resolve(res);\n\t          }\n\t        } catch (error) {\n\t          reject(error);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Add an onSuccess callback and optionally an onFail callback to the Promise\n\t     * @param {Function} onSuccess\n\t     * @param {Function} [onFail]\n\t     * @returns {Promise} promise\n\t     */\n\t    this.then = function (onSuccess, onFail) {\n\t      return new Promise(function (resolve, reject) {\n\t        var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n\t        var f = onFail ? _then(onFail, resolve, reject) : reject;\n\t\n\t        _process(s, f);\n\t      }, self);\n\t    };\n\t\n\t    /**\n\t     * Resolve the promise\n\t     * @param {*} result\n\t     * @type {Function}\n\t     */\n\t    _resolve2 = function _resolve(result) {\n\t      _onSuccess.forEach(function (fn) {\n\t        fn(result);\n\t      });\n\t\n\t      _process = function _process(onSuccess, onFail) {\n\t        onSuccess(result);\n\t      };\n\t\n\t      _resolve2 = _reject2 = function _reject() {\n\t        throw new Error('Promise is already resolved');\n\t      };\n\t\n\t      return self;\n\t    };\n\t\n\t    /**\n\t     * Reject the promise\n\t     * @param {Error} error\n\t     * @type {Function}\n\t     */\n\t    _reject2 = function _reject(error) {\n\t      _onFail.forEach(function (fn) {\n\t        fn(error);\n\t      });\n\t\n\t      _process = function _process(onSuccess, onFail) {\n\t        onFail(error);\n\t      };\n\t\n\t      _resolve2 = _reject2 = function _reject() {\n\t        throw new Error('Promise is already resolved');\n\t      };\n\t\n\t      return self;\n\t    };\n\t\n\t    /**\n\t     * Cancel te promise. This will reject the promise with a CancellationError\n\t     * @returns {Promise} self\n\t     */\n\t    this.cancel = function () {\n\t      _reject2(new CancellationError());\n\t\n\t      return self;\n\t    };\n\t\n\t    /**\n\t     * Set a timeout for the promise. If the promise is not resolved within\n\t     * the time, the promise will be cancelled and a TimeoutError is thrown.\n\t     * If the promise is resolved in time, the timeout is removed.\n\t     * @param {number} delay     Delay in milliseconds\n\t     * @returns {Promise} self\n\t     */\n\t    this.timeout = function (delay) {\n\t      var timer = setTimeout(function () {\n\t        _reject2(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n\t      }, delay);\n\t\n\t      self.always(function () {\n\t        clearTimeout(timer);\n\t      });\n\t\n\t      return self;\n\t    };\n\t\n\t    // attach handler passing the resolve and reject functions\n\t    handler(function (result) {\n\t      _resolve2(result);\n\t    }, function (error) {\n\t      _reject2(error);\n\t    });\n\t  }\n\t\n\t  // TODO: add support for Promise.catch(Error, callback)\n\t  // TODO: add support for Promise.catch(Error, Error, callback)\n\t\n\t  /**\n\t   * Execute given callback when the promise either resolves or rejects.\n\t   * @param {Function} fn\n\t   * @returns {Promise} promise\n\t   */\n\t\n\t\n\t  _createClass(Promise, [{\n\t    key: 'always',\n\t    value: function always(fn) {\n\t      return this.then(fn, fn);\n\t    }\n\t\n\t    /**\n\t     * Create a promise which resolves when all provided promises are resolved,\n\t     * and fails when any of the promises resolves.\n\t     * @param {Promise[]} promises\n\t     * @returns {Promise} promise\n\t     */\n\t\n\t  }], [{\n\t    key: 'all',\n\t    value: function all(promises) {\n\t      return new Promise(function (resolve, reject) {\n\t        var remaining = promises.length;\n\t        var results = [];\n\t\n\t        if (remaining) {\n\t          promises.forEach(function (p, i) {\n\t            p.then(function (result) {\n\t              results[i] = result;\n\t              remaining--;\n\t              if (remaining === 0) {\n\t                resolve(results);\n\t              }\n\t            }, function (error) {\n\t              remaining = 0;\n\t              reject(error);\n\t            });\n\t          });\n\t        } else {\n\t          resolve(results);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Create a promise resolver\n\t     * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n\t     */\n\t\n\t  }, {\n\t    key: 'defer',\n\t    value: function defer() {\n\t      var resolver = {};\n\t\n\t      resolver.promise = new Promise(function (resolve, reject) {\n\t        resolver.resolve = resolve;\n\t        resolver.reject = reject;\n\t      });\n\t\n\t      return resolver;\n\t    }\n\t  }]);\n\t\n\t  return Promise;\n\t}();\n\t\n\texports.default = Promise;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _RegisterWorker = __webpack_require__(3);\n\t\n\tvar _RegisterWorker2 = _interopRequireDefault(_RegisterWorker);\n\t\n\tvar _Promise = __webpack_require__(1);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _TaskQueue = __webpack_require__(5);\n\t\n\tvar _TaskQueue2 = _interopRequireDefault(_TaskQueue);\n\t\n\tvar _worker = __webpack_require__(8);\n\t\n\tvar _worker2 = _interopRequireDefault(_worker);\n\t\n\tvar _WorkerActionEnum = __webpack_require__(12);\n\t\n\tvar _WorkerActionEnum2 = _interopRequireDefault(_WorkerActionEnum);\n\t\n\tvar _TaskStatusEnum = __webpack_require__(7);\n\t\n\tvar _TaskStatusEnum2 = _interopRequireDefault(_TaskStatusEnum);\n\t\n\tvar _WorkerStatusEnum = __webpack_require__(11);\n\t\n\tvar _WorkerStatusEnum2 = _interopRequireDefault(_WorkerStatusEnum);\n\t\n\tvar _WarningTextEnum = __webpack_require__(10);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Named Class expression\n\tvar MainThread = function () {\n\t  /**\n\t   * Involed when object is instantiated\n\t   * Set flags/variables and calls init method to attach event listeners\n\t   * @param  {Object} config - Refer API/docs for config keys\n\t   */\n\t  function MainThread(config) {\n\t    _classCallCheck(this, MainThread);\n\t\n\t    config = config || {};\n\t\n\t    if (typeof config.maxWorkers === 'undefined') {\n\t      config.minWorkers = 1;\n\t    }\n\t\n\t    if (typeof config.maxWorkers === 'undefined') {\n\t      config.maxWorkers = window.navigator && window.navigator.hardwareConcurrency || 3;\n\t    }\n\t\n\t    // max workers should not be less than min workers\n\t    config.maxWorkers = Math.max(config.maxWorkers, config.minWorkers);\n\t\n\t    // reset workers with every new Object\n\t    this.workers = _worker2.default.workers = [];\n\t\n\t    _extends(this, config);\n\t    this.config = config;\n\t\n\t    _worker2.default.config = config;\n\t\n\t    this.init();\n\t  }\n\t\n\t  _createClass(MainThread, [{\n\t    key: 'getAllWorkers',\n\t\n\t\n\t    /**\n\t     * Return list of all workers\n\t     * @return {Array}\n\t     */\n\t    value: function getAllWorkers() {\n\t      return _worker2.default.getAll();\n\t    }\n\t  }, {\n\t    key: 'getActiveWorkers',\n\t\n\t\n\t    /**\n\t     * Return list of all ACTIVE workers\n\t     * @return {Array}\n\t     */\n\t    value: function getActiveWorkers() {\n\t      return _worker2.default.getActive();\n\t    }\n\t  }, {\n\t    key: 'getIdleWorkers',\n\t\n\t\n\t    /**\n\t     * Return list of all IDLE workers\n\t     * @return {Array}\n\t     */\n\t    value: function getIdleWorkers() {\n\t      return _worker2.default.getIdle();\n\t    }\n\t  }, {\n\t    key: 'getTerminatedWorkers',\n\t\n\t\n\t    /**\n\t     * Return list of all CLOSED workers\n\t     * @return {Array}\n\t     */\n\t    value: function getTerminatedWorkers() {\n\t      return _worker2.default.getTerminated();\n\t    }\n\t  }, {\n\t    key: 'terminateAllWorkers',\n\t\n\t\n\t    /**\n\t     * Terminate all workers at once\n\t     * @return {Object}\n\t     */\n\t    value: function terminateAllWorkers() {\n\t      return _worker2.default.terminateAll();\n\t    }\n\t  }, {\n\t    key: 'terminateWorker',\n\t\n\t\n\t    /**\n\t     * Terminate a specific worker\n\t     * @return {Object}\n\t     */\n\t    value: function terminateWorker(id) {\n\t      return _worker2.default.terminate(id);\n\t    }\n\t  }, {\n\t    key: 'broadCastAll',\n\t\n\t\n\t    /**\n\t     * Send a postmessage to all ACTIVE workers\n\t     * @return {Object}\n\t     */\n\t    value: function broadCastAll(msg) {\n\t      return _worker2.default.broadCastAll(msg);\n\t    }\n\t  }, {\n\t    key: 'broadCastTo',\n\t\n\t\n\t    /**\n\t     * Send a postmessage to a specific worker\n\t     * @return {Object}\n\t     */\n\t    value: function broadCastTo(id, msg) {\n\t      return _worker2.default.broadCastTo(id, msg);\n\t    }\n\t  }, {\n\t    key: 'exec',\n\t\n\t\n\t    /**\n\t     * API methods exposed for Public ends here\n\t     **/\n\t\n\t    value: function exec(method, params, config) {\n\t      // validate type of arguments\n\t      if (params && !Array.isArray(params)) {\n\t        throw new TypeError('Array expected as argument \"params\"');\n\t      }\n\t\n\t      if (!config) {\n\t        config = {};\n\t      }\n\t\n\t      var resolver = _Promise2.default.defer();\n\t\n\t      var task = {};\n\t\n\t      _extends(task, config);\n\t      _extends(task, {\n\t        method: method,\n\t        params: params,\n\t        resolver: resolver,\n\t        priority: config && config.priority || _TaskStatusEnum2.default.LOW\n\t      });\n\t\n\t      this.taskQueue._add(task);\n\t      this._runQueuedTask();\n\t\n\t      return resolver.promise;\n\t    }\n\t  }, {\n\t    key: '_runQueuedTask',\n\t    value: function _runQueuedTask() {\n\t      var _this = this;\n\t\n\t      if (!this.taskQueue.tasks.length) {\n\t        // Wait for some time for resolve/reject promises\n\t        setTimeout(function () {\n\t          _worker2.default.terminateAllExceptOne(_this.config.minWorkers);\n\t        }, 1000);\n\t      }\n\t\n\t      var nextQueuedTask = this.taskQueue.getNextTask(),\n\t          availableWorker = _worker2.default.getIdle()[0];\n\t\n\t      if (!availableWorker && _worker2.default.getActive().length + _worker2.default.getIdle().length < this.config.maxWorkers) {\n\t        // create a new worker\n\t        this.register();\n\t        availableWorker = _worker2.default.getIdle()[0];\n\t      }\n\t\n\t      if (availableWorker) {\n\t        nextQueuedTask.runningOnWorkerId = availableWorker.id;\n\t\n\t        // remove the task from queue list\n\t        this.taskQueue._remove(nextQueuedTask.id);\n\t        // if task is not already completed\n\t        if (nextQueuedTask.status === _TaskStatusEnum2.default.QUEUED) {\n\t          availableWorker.status = _WorkerStatusEnum2.default.ACTIVE;\n\t          // send the request to worker to execute\n\t          availableWorker.worker.sendMessage(availableWorker.worker, {\n\t            id: availableWorker.id,\n\t            resolver: nextQueuedTask.resolver,\n\t            taskId: nextQueuedTask.id,\n\t            method: nextQueuedTask.method,\n\t            params: nextQueuedTask.params,\n\t            action: _WorkerActionEnum2.default.EXEC\n\t          }).then(function (data) {\n\t            availableWorker.status = _WorkerStatusEnum2.default.IDLE;\n\t            if (data) {\n\t              _this._runQueuedTask(); // trigger next task in the queue\n\t            }\n\t          }).catch(function (e) {\n\t            // if the worker crashed and terminated, remove it from the pool\n\t            if (availableWorker.status === _WorkerStatusEnum2.default.TERMINATED) {\n\t              _worker2.default.terminate(availableWorker.id);\n\t              // If minWorkers set, spin up new workers to replace the crashed ones\n\t              if (_this.config.minWorkers) {\n\t                _this._ensureMinWorkers();\n\t              }\n\t            }\n\t            _this._runQueuedTask(); // trigger next task in the queue\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_ensureMinWorkers',\n\t    value: function _ensureMinWorkers() {\n\t      for (var i = this.workers.length; i < this.config.minWorkers; i++) {\n\t        this.register();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'register',\n\t\n\t\n\t    /**\n\t     * Register a new worker. Config has to be passed with some required keys\n\t     * @return {Object} worker\n\t     */\n\t    value: function register() {\n\t      var config = this.config;\n\t\n\t      if (!config) {\n\t        throw new Error(_WarningTextEnum2.default.CONFIG_REQUIRED);\n\t      }\n\t\n\t      var url = config.url;\n\t\n\t      if (!url) {\n\t        throw new Error(_WarningTextEnum2.default.URL_REQUIRED);\n\t      }\n\t\n\t      var worker = new _RegisterWorker2.default(config);\n\t\n\t      return worker;\n\t    }\n\t  }, {\n\t    key: 'init',\n\t\n\t\n\t    /**\n\t     * Invoked on object instantiation unless user pass a key to call it explicitly\n\t     */\n\t    value: function init() {\n\t      if (!_worker2.default._isWebWorkerSupported()) {\n\t        console.warn(_WarningTextEnum2.default.WORKER_NOT_SUPPORTED);\n\t        return;\n\t      }\n\t\n\t      this.taskQueue = _TaskQueue2.default;\n\t      this.taskQueue.tasks = [];\n\t    }\n\t  }]);\n\t\n\t  return MainThread;\n\t}();\n\t\n\t;\n\t\n\texports.default = MainThread;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _uuid = __webpack_require__(4);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tvar _TaskQueue = __webpack_require__(5);\n\t\n\tvar _TaskQueue2 = _interopRequireDefault(_TaskQueue);\n\t\n\tvar _worker = __webpack_require__(8);\n\t\n\tvar _worker2 = _interopRequireDefault(_worker);\n\t\n\tvar _generalUtils = __webpack_require__(9);\n\t\n\tvar _generalUtils2 = _interopRequireDefault(_generalUtils);\n\t\n\tvar _WorkerStatusEnum = __webpack_require__(11);\n\t\n\tvar _WorkerStatusEnum2 = _interopRequireDefault(_WorkerStatusEnum);\n\t\n\tvar _WorkerActionEnum = __webpack_require__(12);\n\t\n\tvar _WorkerActionEnum2 = _interopRequireDefault(_WorkerActionEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Named Class expression\n\tvar RegisterWorker = function () {\n\t  /**\n\t   * Invoked when the object is instantiated\n\t   */\n\t  function RegisterWorker(config) {\n\t    _classCallCheck(this, RegisterWorker);\n\t\n\t    this.init(config);\n\t  }\n\t\n\t  _createClass(RegisterWorker, [{\n\t    key: 'onError',\n\t\n\t    // reject all running tasks on worker error\n\t    value: function onError(error) {\n\t      var _this = this;\n\t\n\t      this.status = _WorkerStatusEnum2.default.TERMINATED;\n\t      var activeTasks = _TaskQueue2.default.getActive(),\n\t          activeTasksRunningOnWorker = [];\n\t\n\t      if (activeTasks && activeTasks.length) {\n\t        activeTasksRunningOnWorker = activeTasks.filter(function (task) {\n\t          return task.runningOnWorkerId === _this.id;\n\t        });\n\t      }\n\t\n\t      for (var i = 0; i < activeTasksRunningOnWorker.length; i++) {\n\t        activeTasksRunningOnWorker[i].resolver.reject(error);\n\t      }\n\t\n\t      return activeTasksRunningOnWorker;\n\t    }\n\t  }, {\n\t    key: 'addEventListeners',\n\t\n\t\n\t    /**\n\t    * Attach postmessage, native and custom listeners to the window\n\t    */\n\t    value: function addEventListeners() {\n\t      var _this2 = this;\n\t\n\t      this.worker.addEventListener('message', this.onWorkerMessage.bind(this), false);\n\t      // listen for worker messages error\n\t      this.worker.addEventListener('error', this.onError.bind(this));\n\t      // listen for worker messages exit\n\t      this.worker.addEventListener('exit', function () {\n\t        var error = new Error('Worker terminated unexpectedly');\n\t\n\t        _this2.onError(error).bind(_this2);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'onWorkerMessage',\n\t    value: function onWorkerMessage(ev) {\n\t      if (!ev || !ev.data || ev.data.action !== _WorkerActionEnum2.default.EXEC) {\n\t        return false;\n\t      }\n\t\n\t      var task = _TaskQueue2.default._getCompleted(ev.data.taskId);\n\t\n\t      if (ev.data.error) {\n\t        task.resolver.reject(_generalUtils2.default.deSerializeError(ev.data.error));\n\t        this.totalJobsFailed += 1;\n\t        this.lastJobFaileddAt = +new Date();\n\t        if (task.onError && typeof task.onError === 'function') {\n\t          task.onError();\n\t        }\n\t        return false;\n\t      }\n\t      task.resolver.resolve(ev.data.result);\n\t      this.totalJobsCompleted += 1;\n\t      this.lastJobCompletedAt = +new Date();\n\t      if (task.onSuccess && typeof task.onSuccess === 'function') {\n\t        task.onSuccess();\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'init',\n\t\n\t    /**\n\t     * Open a new tab\n\t     * @param  {Object} config - Refer API for config keys\n\t     * @return {Object} this\n\t     */\n\t    value: function init(config) {\n\t      config = config || {};\n\t\n\t      _extends(this, config);\n\t      this.id = _uuid2.default.generate() || _worker2.default.workers.length + 1;\n\t      this.status = _WorkerStatusEnum2.default.IDLE;\n\t      this.createdAt = +new Date();\n\t      this.lastJobCompletedAt = null;\n\t      this.totalJobsCompleted = 0;\n\t      this.totalJobsFailed = 0;\n\t\n\t      this.worker = new Worker(config.url);\n\t\n\t      _worker2.default.sendMessage(this.worker, {\n\t        id: this.id,\n\t        action: _WorkerActionEnum2.default.READY,\n\t        message: 'Worker is ready.'\n\t      });\n\t\n\t      // TODO: only add methods which are needed\n\t      _extends(this.worker, {\n\t        sendMessage: _worker2.default.sendMessage\n\t      });\n\t\n\t      // Add Worker event-listeners\n\t      this.addEventListeners();\n\t\n\t      // Push it to the list of workers\n\t      _worker2.default.addNew(this);\n\t\n\t      // Return reference for chaining purpose\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return RegisterWorker;\n\t}();\n\t\n\t;\n\t\n\texports.default = RegisterWorker;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * UUID.js: The RFC-compliant UUID generator for JavaScript.\n\t * ES6 port of only `generate` method of UUID by Varun Malhotra under MIT License\n\t *\n\t * @author  LiosK\n\t * @version v3.3.0\n\t * @license The MIT License: Copyright (c) 2010-2016 LiosK.\n\t */\n\t\n\t/** @constructor */\n\tvar UUID = void 0;\n\t\n\tUUID = function () {\n\t  'use strict';\n\t\n\t  /** @lends UUID */\n\t\n\t  function UUID() {}\n\t\n\t  /**\n\t   * The simplest function to get an UUID string.\n\t   * @returns {string} A version 4 UUID string.\n\t   */\n\t  UUID.generate = function () {\n\t    var rand = UUID._getRandomInt,\n\t        hex = UUID._hexAligner;\n\t\n\t    // [\"timeLow\", \"timeMid\", \"timeHiAndVersion\", \"clockSeqHiAndReserved\", \"clockSeqLow\", \"node\"]\n\t    return hex(rand(32), 8) + // time_low\n\t    '-' + hex(rand(16), 4) + // time_mid\n\t    '-' + hex(0x4000 | rand(12), 4) + // time_hi_and_version\n\t    '-' + hex(0x8000 | rand(14), 4) + // clock_seq_hi_and_reserved clock_seq_low\n\t    '-' + hex(rand(48), 12); // node\n\t  };\n\t\n\t  /**\n\t   * Returns an unsigned x-bit random integer.\n\t   * @param {int} x A positive integer ranging from 0 to 53, inclusive.\n\t   * @returns {int} An unsigned x-bit random integer (0 <= f(x) < 2^x).\n\t   */\n\t  UUID._getRandomInt = function (x) {\n\t    if (x < 0) {\n\t      return NaN;\n\t    }\n\t    if (x <= 30) {\n\t      return 0 | Math.random() * (1 << x);\n\t    }\n\t    if (x <= 53) {\n\t      return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << x - 30)) * (1 << 30);\n\t    }\n\t\n\t    return NaN;\n\t  };\n\t\n\t  /**\n\t   * Returns a function that converts an integer to a zero-filled string.\n\t   * @param {int} radix\n\t   * @returns {function(num&#44; length)}\n\t   */\n\t  UUID._getIntAligner = function (radix) {\n\t    return function (num, length) {\n\t      var str = num.toString(radix),\n\t          i = length - str.length,\n\t          z = '0';\n\t\n\t      for (; i > 0; i >>>= 1, z += z) {\n\t        if (i & 1) {\n\t          str = z + str;\n\t        }\n\t      }\n\t      return str;\n\t    };\n\t  };\n\t\n\t  UUID._hexAligner = UUID._getIntAligner(16);\n\t\n\t  /**\n\t   * Returns UUID string representation.\n\t   * @returns {string} {@link UUID#hexString}.\n\t   */\n\t  UUID.prototype.toString = function () {\n\t    return this.hexString;\n\t  };\n\t\n\t  return UUID;\n\t}(UUID);\n\t\n\texports.default = UUID;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _uuid = __webpack_require__(4);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tvar _array = __webpack_require__(6);\n\t\n\tvar _array2 = _interopRequireDefault(_array);\n\t\n\tvar _TaskStatusEnum = __webpack_require__(7);\n\t\n\tvar _TaskStatusEnum2 = _interopRequireDefault(_TaskStatusEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar TaskQueue = {\n\t  config: {},\n\t  tasks: [],\n\t  completedTasks: [],\n\t\n\t  /**\n\t   * Add task to the queue\n\t   * @param {Object} task - with proper config\n\t   */\n\t  _add: function _add(task) {\n\t    if (!task) {\n\t      throw new Error('No task passed for queuing');\n\t    }\n\t\n\t    if (Object.prototype.toString.call(task) !== '[object Object]') {\n\t      throw new Error('Task should be an object');\n\t    }\n\t\n\t    task.id = _uuid2.default.generate() || TaskQueue.tasks.length;\n\t    task.status = _TaskStatusEnum2.default.QUEUED;\n\t    TaskQueue.tasks.push(task);\n\t  },\n\t  _addToCompletedList: function _addToCompletedList(task) {\n\t    if (!task) {\n\t      throw new Error('No task passed for queuing');\n\t    }\n\t\n\t    if (Object.prototype.toString.call(task) !== '[object Object]') {\n\t      throw new Error('Task should be an object');\n\t    }\n\t\n\t    TaskQueue.completedTasks.push(task);\n\t  },\n\t  /**\n\t   * Remove a task from the queue\n\t   * @param {Number} task\n\t   */\n\t  _remove: function _remove(id) {\n\t    if (!id) {\n\t      throw new Error('No id passed');\n\t    }\n\t\n\t    var task = void 0;\n\t\n\t    task = _array2.default.searchByKeyName(TaskQueue.tasks, 'id', id, 'both');\n\t    TaskQueue._addToCompletedList(task.obj);\n\t    if (task.index !== -1) {\n\t      TaskQueue.tasks.splice(task.index, 1);\n\t    }\n\t\n\t    return undefined;\n\t  },\n\t  _getCompleted: function _getCompleted(id) {\n\t    if (!id) {\n\t      throw new Error('No id passed');\n\t    }\n\t\n\t    var task = _array2.default.searchByKeyName(TaskQueue.completedTasks, 'id', id);\n\t\n\t    return task || {};\n\t  },\n\t  /**\n\t   * Get the task from the queue\n\t   * @param {id} task\n\t   * @return {Object} task being queried or an empty Object(if not found)\n\t   */\n\t  get: function get(id) {\n\t    if (!id) {\n\t      return TaskQueue.tasks[0] || {};\n\t    }\n\t\n\t    var task = _array2.default.searchByKeyName(TaskQueue.tasks, 'id', id);\n\t\n\t    return task || {};\n\t  },\n\t  /**\n\t   * Get next available task from the queue\n\t   * @return {Object} task being queried or an empty Object(if not found)\n\t   */\n\t  getNextTask: function getNextTask() {\n\t    // Sort as per task priorities\n\t    _array2.default.sortOnStringType(TaskQueue.tasks, 'priority');\n\t    return TaskQueue.get();\n\t  },\n\t  /**\n\t   * Filter out all the active tasks\n\t   * @return {Array} - only the active tasks\n\t   */\n\t  getActive: function getActive() {\n\t    return TaskQueue.tasks.filter(function (task) {\n\t      return task.status === _TaskStatusEnum2.default.ACTIVE;\n\t    });\n\t  },\n\t  /**\n\t   * Filter out all the completed tasks\n\t   * @return {Array} - only the completed tasks\n\t   */\n\t  getCompleted: function getCompleted() {\n\t    return TaskQueue.tasks.filter(function (task) {\n\t      return task.status === _TaskStatusEnum2.default.COMPLETED;\n\t    });\n\t  },\n\t  /**\n\t   * Filter out all the failed tasks\n\t   * @return {Array} - only the failed tasks\n\t   */\n\t  getFailed: function getFailed() {\n\t    return TaskQueue.tasks.filter(function (task) {\n\t      return task.status === _TaskStatusEnum2.default.FAILED;\n\t    });\n\t  },\n\t  /**\n\t   * To get list of all tasks\n\t   * @return {Array} - list of all tasks\n\t   */\n\t  getAll: function getAll() {\n\t    return TaskQueue.tasks;\n\t  }\n\t};\n\t\n\texports.default = TaskQueue;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ArrayUtils = {};\n\t\n\t/**\n\t * Different type of data needed after searching an item(Object) within data(Array of Objects).\n\t * 1. `INDEX` returns just the index at which the item was present\n\t * 2. `OBJECT` returns the matched object\n\t * 3. `BOTH` returns an object { obj: matched_object, index: index_found }\n\t */\n\tvar returnPreferenceEnum = {\n\t  INDEX: 'index',\n\t  OBJECT: 'object',\n\t  BOTH: 'both'\n\t};\n\t\n\t/**\n\t * Search for an item(Object) within a data-set(Array Of Objects)\n\t * @param  {Array of Objects} data\n\t * @param  {String} key - Unique key to search on the basis of\n\t * @param  {String} value - The matching criteria\n\t * @param  {String} returnPreference - what kind of output is needed\n\t * @return {Object}\n\t */\n\tArrayUtils.searchByKeyName = function (data, key, value, returnPreference) {\n\t  if (!data || !key) {\n\t    return false;\n\t  }\n\t\n\t  returnPreference = returnPreference || returnPreferenceEnum[1]; // default to Object\n\t  var i = void 0,\n\t      obj = void 0,\n\t      returnData = void 0,\n\t      index = -1;\n\t\n\t  for (i = 0; i < data.length; i++) {\n\t    obj = data[i];\n\t    // Number matching support\n\t    if (!isNaN(value) && obj && parseInt(obj[key], 10) === parseInt(value, 10)) {\n\t      index = i;\n\t      break;\n\t    } else if (isNaN(value) && obj && obj[key] === value) {\n\t      // String exact matching support\n\t      index = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (index === -1) {\n\t    // item not found\n\t    data[index] = {}; // for consistency\n\t  }\n\t\n\t  switch (returnPreference) {\n\t    case returnPreferenceEnum.INDEX:\n\t      returnData = index;\n\t      break;\n\t    case returnPreferenceEnum.BOTH:\n\t      returnData = {\n\t        obj: data[index],\n\t        index: index\n\t      };\n\t      break;\n\t    case returnPreferenceEnum.OBJECT:\n\t    default:\n\t      returnData = data[index];\n\t      break;\n\t  }\n\t\n\t  return returnData;\n\t};\n\t\n\t/**\n\t * Sort array based on key defined.\n\t * @param {Array} arr - Array to be sorted\n\t * @param {String} key - key on which sort is required\n\t * @param {Boolean} orederBy - Sort in asc/desc order. If nothing is specified, it's ascending order.\n\t */\n\tArrayUtils.sortOn = function (arr, key, orderBy) {\n\t  arr.sort(function (a, b) {\n\t    return orderBy ? b[key] - a[key] : a[key] - b[key];\n\t  });\n\t};\n\t\n\t/**\n\t * Sort array based on key:String defined.\n\t * @param {Array} arr - Array to be sorted\n\t * @param {String} key - key on which sort is required\n\t * @param {Boolean} orederBy - Sort in asc/desc order. If nothing is specified, it's ascending order.\n\t */\n\tArrayUtils.sortOnStringType = function (arr, key) {\n\t  arr.sort(function (a, b) {\n\t    if (a[key] < b[key]) {\n\t      return -1;\n\t    } else if (a[key] > b[key]) {\n\t      return 1;\n\t    }\n\t    return 0;\n\t  });\n\t};\n\t\n\texports.default = ArrayUtils;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for Worker status(still active / idle) used for client-worker-communication\n\t * @type {Object}\n\t */\n\tvar TaskStatusEnum = {\n\t  QUEUED: 'queued',\n\t  ACTIVE: 'active',\n\t  FAILED: 'failed',\n\t  COMPLETED: 'completed'\n\t};\n\t\n\texports.default = TaskStatusEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * A Tab utility file to deal with tab operations\n\t                                                                                                                                                                                                                                                                               */\n\t\n\t\n\tvar _Promise = __webpack_require__(1);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _array = __webpack_require__(6);\n\t\n\tvar _array2 = _interopRequireDefault(_array);\n\t\n\tvar _generalUtils = __webpack_require__(9);\n\t\n\tvar _generalUtils2 = _interopRequireDefault(_generalUtils);\n\t\n\tvar _WorkerStatusEnum = __webpack_require__(11);\n\t\n\tvar _WorkerStatusEnum2 = _interopRequireDefault(_WorkerStatusEnum);\n\t\n\tvar _WarningTextEnum = __webpack_require__(10);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar WorkerUtils = {\n\t  workers: [],\n\t  config: {},\n\t\n\t  /**\n\t   * Check is worker is present on window\n\t   * @return {Boolean} [description]\n\t   */\n\t  _isWebWorkerSupported: function _isWebWorkerSupported() {\n\t    if (typeof window.Worker === 'function' || _typeof(window.Worker) === 'object' || typeof Worker.prototype.constructor === 'function') {\n\t      return true;\n\t    }\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Remove a tab from a list of all workers.\n\t   * This is required when users opts for removing the idle workers from the list of workers.\n\t   * This can be done explictly by passing `removeidleworkers` key while instantiating Parent.\n\t   * @param  {Object} tab\n\t   */\n\t  _remove: function _remove(worker) {\n\t    var index = void 0;\n\t\n\t    index = _array2.default.searchByKeyName(WorkerUtils.workers, 'id', worker.id, 'index');\n\t    WorkerUtils.workers.splice(index, 1);\n\t  },\n\t\n\t  /**\n\t   * Add a new worker to the Array of workers\n\t   * @param  {Object} worker\n\t   * @return {Object} - this\n\t   */\n\t  addNew: function addNew(worker) {\n\t    WorkerUtils.workers.push(worker);\n\t    return undefined;\n\t  },\n\t  /**\n\t   * Filter out all the active workers\n\t   * @return {Array} - only the active workers\n\t   */\n\t  getActive: function getActive() {\n\t    return WorkerUtils.workers.filter(function (worker) {\n\t      return worker.status === _WorkerStatusEnum2.default.ACTIVE;\n\t    });\n\t  },\n\t  /**\n\t   * Filter out all the idle workers\n\t   * @return {Array} - only the idle workers\n\t   */\n\t  getIdle: function getIdle() {\n\t    return WorkerUtils.workers.filter(function (worker) {\n\t      return worker.status === _WorkerStatusEnum2.default.IDLE;\n\t    });\n\t  },\n\t  /**\n\t   * Filter out all the terminated workers\n\t   * @return {Array} - only the idle workers\n\t   */\n\t  getTerminated: function getTerminated() {\n\t    return WorkerUtils.workers.filter(function (worker) {\n\t      return worker.status === _WorkerStatusEnum2.default.TERMINATED;\n\t    });\n\t  },\n\t  /**\n\t   * To get list of all workers(idle/active).\n\t   * Note: idle workers will not be returned if `removeidleworkers` key is paased while instantiaiting Parent.\n\t   * @return {Array} - list of all workers\n\t   */\n\t  getAll: function getAll() {\n\t    return WorkerUtils.workers;\n\t  },\n\t\n\t  /**\n\t   * Terminate a specific tab\n\t   * @param  {String} id\n\t   * @return {Object} this\n\t   */\n\t  terminate: function terminate(id) {\n\t    if (!id) {\n\t      console.warn(_WarningTextEnum2.default.NO_ID_PROVIDED);\n\t      return WorkerUtils;\n\t    }\n\t\n\t    var worker = _array2.default.searchByKeyName(WorkerUtils.workers, 'id', id, 'object');\n\t\n\t    if (worker && worker.worker && worker.status === _WorkerStatusEnum2.default.TERMINATED) {\n\t      console.warn(_WarningTextEnum2.default.WORKER_ALREADY_TERMINATED);\n\t      return WorkerUtils;\n\t    }\n\t\n\t    if (worker && worker.worker && worker.worker.terminate) {\n\t      worker.worker.terminate();\n\t      worker.status = _WorkerStatusEnum2.default.TERMINATED;\n\t    }\n\t\n\t    return WorkerUtils;\n\t  },\n\t  /**\n\t   * Terminate all (active+idle) workers using a native method `Terminate` available on window.open reference.\n\t   * @return {WorkerUtils} this\n\t   */\n\t  terminateAllExceptOne: function terminateAllExceptOne(minWorkers) {\n\t    return WorkerUtils.terminateAll(true, minWorkers || 1);\n\t  },\n\t  /**\n\t   * Terminate all active workers using a native method `Terminate` available on window.open reference.\n\t   * @return {WorkerUtils} this\n\t   */\n\t  terminateAll: function terminateAll(exceptOne, minWorkers) {\n\t    var i = void 0,\n\t        nonTerminatedWorkers = void 0;\n\t\n\t    if (exceptOne) {\n\t      // terminate only idle workers\n\t      nonTerminatedWorkers = [].concat(WorkerUtils.getIdle());\n\t    } else {\n\t      nonTerminatedWorkers = [].concat(WorkerUtils.getActive()).concat(WorkerUtils.getIdle());\n\t    }\n\t\n\t    for (i = 0; i < nonTerminatedWorkers.length; i++) {\n\t      // ensure minWorkers should be there\n\t      if (exceptOne && WorkerUtils.getIdle() && WorkerUtils.getIdle().length <= minWorkers) {\n\t        return WorkerUtils;\n\t      }\n\t\n\t      if (nonTerminatedWorkers[i] && nonTerminatedWorkers[i].worker && nonTerminatedWorkers[i].worker.terminate) {\n\t        nonTerminatedWorkers[i].worker.terminate();\n\t        nonTerminatedWorkers[i].status = _WorkerStatusEnum2.default.TERMINATED;\n\t      }\n\t    }\n\t\n\t    return WorkerUtils;\n\t  },\n\t  /**\n\t   * Send a postmessage to every active Child tab(excluding itself i.e Parent Tab)\n\t   * @param  {String} config\n\t   */\n\t  broadCastAll: function broadCastAll(config) {\n\t    var i = void 0,\n\t        workers = WorkerUtils.getActive() || [];\n\t\n\t    for (i = 0; i < workers.length; i++) {\n\t      WorkerUtils.sendMessage(workers[i], config);\n\t    }\n\t\n\t    return WorkerUtils;\n\t  },\n\t  /**\n\t   * Send a postmessage to a specific Child tab\n\t   * @param  {String} id\n\t   * @param  {String} config\n\t   */\n\t  broadCastTo: function broadCastTo(id, config) {\n\t    var targetedWorker = void 0,\n\t        workers = [].concat(WorkerUtils.getActive()).concat(WorkerUtils.getIdle());\n\t\n\t    targetedWorker = _array2.default.searchByKeyName(workers, 'id', id);\n\t    if (targetedWorker) {\n\t      WorkerUtils.sendMessage(targetedWorker, config);\n\t    }\n\t\n\t    return WorkerUtils;\n\t  },\n\t  /**\n\t   * Send a postMessage to the desired window/frame\n\t   * @param  {Object}  target\n\t   * @param  {String}  msg\n\t   */\n\t  sendMessage: function sendMessage(target, config) {\n\t    var msg = void 0,\n\t        isEncodedMethod = false;\n\t\n\t    config = config || {};\n\t    if (config.method && typeof config.method === 'function') {\n\t      config.method = _generalUtils2.default.serializeFunction(config.method);\n\t      isEncodedMethod = true;\n\t    }\n\t\n\t    if (!config.resolver) {\n\t      config.resolver = _Promise2.default.defer();\n\t    }\n\t\n\t    msg = {\n\t      id: config.id,\n\t      taskId: config.taskId,\n\t      method: config.method,\n\t      params: config.params,\n\t      action: config.action,\n\t      isEncodedMethod: isEncodedMethod\n\t    };\n\t\n\t    msg = _generalUtils2.default.stringifyJson(msg);\n\t\n\t    if (target && target.postMessage) {\n\t      target.postMessage(msg);\n\t    }\n\t\n\t    return config.resolver.promise;\n\t  }\n\t};\n\t\n\texports.default = WorkerUtils;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _WarningTextEnum = __webpack_require__(10);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar GeneralUtils = {\n\t  isPromise: function isPromise(value) {\n\t    return value && typeof value.then === 'function';\n\t  },\n\t  serializeFunction: function serializeFunction(fn) {\n\t    if (!fn || typeof fn !== 'function') {\n\t      return false;\n\t    }\n\t\n\t    return encodeURI(fn.toString());\n\t  },\n\t  deSerializeFunction: function deSerializeFunction(fn) {\n\t    if (!fn || typeof fn !== 'string') {\n\t      return false;\n\t    }\n\t\n\t    return decodeURI(fn);\n\t  },\n\t  serializeError: function serializeError(error) {\n\t    var i = void 0,\n\t        err = {},\n\t        errProps = ['name', 'message', 'stack', 'custom'];\n\t\n\t    if (error instanceof Error) {\n\t      for (i = errProps.length - 1; i >= 0; i--) {\n\t        err[errProps[i]] = error[errProps[i]];\n\t      }\n\t      return err;\n\t    }\n\t\n\t    return err;\n\t  },\n\t  deSerializeError: function deSerializeError(error) {\n\t    var i = void 0,\n\t        fakeError = new Error('');\n\t\n\t    if (!error) {\n\t      return fakeError;\n\t    }\n\t\n\t    var props = Object.keys(error);\n\t\n\t    for (i = 0; i < props.length; i++) {\n\t      fakeError[props[i]] = error[props[i]];\n\t    }\n\t\n\t    return fakeError;\n\t  },\n\t  /**\n\t   * Stringify Object\n\t   * @param  {String} data\n\t   * @param  {String} err  - Message to be thrown if not valid object\n\t   * @return {Object}      - stringified json\n\t   */\n\t  stringifyJson: function stringifyJson(data, err) {\n\t    err = err || _WarningTextEnum2.default.INVALID_JSON;\n\t    try {\n\t      data = JSON.stringify(data);\n\t    } catch (e) {\n\t      console.warn(err);\n\t    }\n\t\n\t    return data;\n\t  },\n\t  /**\n\t   * Parse sringified data\n\t   * @param  {String} data\n\t   * @param  {String} err  - Message to be thrown if not valid json\n\t   * @return {Object}      - parsed json\n\t   */\n\t  parseJson: function parseJson(data, err) {\n\t    var jsonParsedData = void 0;\n\t\n\t    err = err || _WarningTextEnum2.default.PARSE_JSON;\n\t    try {\n\t      jsonParsedData = JSON.parse(data);\n\t    } catch (e) {\n\t      console.warn(err);\n\t    }\n\t\n\t    return jsonParsedData;\n\t  }\n\t};\n\t\n\texports.default = GeneralUtils;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for showing various warnings to suser when things done wrong\n\t * @type {Object}\n\t */\n\tvar WarningTextEnum = {\n\t  INVALID_JSON: 'Invalid JSON Object!',\n\t  PARSE_JSON: 'Can not parse stringifed data',\n\t  NO_ID_PROVIDED: 'Valid worker id should be provided',\n\t  INVALID_DATA: 'Some wrong message is being sent by Parent.',\n\t  WORKER_ALREADY_TERMINATED: 'Web Worker has already been terminated.',\n\t  CONFIG_REQUIRED: 'Configuration options required. Please read docs.',\n\t  WORKER_NOT_SUPPORTED: 'Web Worker not supported on this browser version',\n\t  URL_REQUIRED: 'Url is needed for creating and opening a new window/tab. Please read docs.'\n\t};\n\t\n\texports.default = WarningTextEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for Worker status(still active / idle) used for client-worker-communication\n\t * @type {Object}\n\t */\n\tvar WorkerStatusEnum = {\n\t  IDLE: 'idle',\n\t  ACTIVE: 'active',\n\t  TERMINATED: 'terminated'\n\t};\n\t\n\texports.default = WorkerStatusEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for Worker action\n\t * @type {Object}\n\t */\n\tvar WorkerActionEnum = {\n\t  READY: 'ready',\n\t  EXEC: 'execute'\n\t};\n\t\n\texports.default = WorkerActionEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _generalUtils = __webpack_require__(9);\n\t\n\tvar _generalUtils2 = _interopRequireDefault(_generalUtils);\n\t\n\tvar _WorkerActionEnum = __webpack_require__(12);\n\t\n\tvar _WorkerActionEnum2 = _interopRequireDefault(_WorkerActionEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Named Class expression\n\tvar WorkerThread = function () {\n\t  /**\n\t   * Involed when object is instantiated\n\t   * Set flags/variables and calls init method to attach event listeners\n\t   * @param  {Object} config - Refer API/docs for config keys\n\t   */\n\t  function WorkerThread(config) {\n\t    _classCallCheck(this, WorkerThread);\n\t\n\t    if (!config) {\n\t      config = {};\n\t    }\n\t\n\t    _extends(this, config);\n\t    this.config = config;\n\t\n\t    this.methods = {};\n\t    if (!config.unlistenEvents) {\n\t      this.addListeners();\n\t    }\n\t  }\n\t\n\t  _createClass(WorkerThread, [{\n\t    key: 'sendMessage',\n\t    value: function sendMessage(obj, origin) {\n\t      if (origin) {\n\t        postMessage(obj, origin);\n\t      } else {\n\t        postMessage(obj);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'exposeMethods',\n\t    value: function exposeMethods(methods) {\n\t      if (!methods || Object.prototype.toString.call(methods) !== '[object Object]') {\n\t        throw new Error('ExposeMethods function expects object');\n\t      }\n\t\n\t      for (var method in methods) {\n\t        var fn = methods[method];\n\t\n\t        if (methods.hasOwnProperty(method) && typeof fn === 'function') {\n\t          this.methods[method] = fn;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMessage',\n\t    value: function onMessage(ev) {\n\t      var _this = this;\n\t\n\t      var result = void 0,\n\t          messageData = void 0;\n\t\n\t      messageData = _generalUtils2.default.parseJson(ev.data) || {};\n\t      if (messageData && messageData.action === _WorkerActionEnum2.default.EXEC) {\n\t        if (messageData.method) {\n\t          var _params = messageData.params;\n\t\n\t          try {\n\t            var _fn = void 0,\n\t                method = void 0;\n\t\n\t            if (messageData.isEncodedMethod) {\n\t              _fn = _generalUtils2.default.deSerializeFunction(messageData.method);\n\t            } else {\n\t              _fn = this.methods[messageData.method];\n\t            }\n\t\n\t            method = eval('(' + _fn + ')'); // eslint-disable-line\n\t\n\t            result = method.apply(method, _params);\n\t            if (_generalUtils2.default.isPromise(result)) {\n\t              result.then(function (thenResult) {\n\t                _this.sendMessage({\n\t                  id: messageData.id,\n\t                  taskId: messageData.taskId,\n\t                  action: messageData.action,\n\t                  result: thenResult,\n\t                  error: null\n\t                }, ev.origin);\n\t              }).catch(function (e) {\n\t                _this.sendMessage({\n\t                  id: messageData.id,\n\t                  taskId: messageData.taskId,\n\t                  action: messageData.action,\n\t                  result: null,\n\t                  error: _generalUtils2.default.serializeError(e)\n\t                }, ev.origin);\n\t              });\n\t            } else {\n\t              this.sendMessage({\n\t                id: messageData.id,\n\t                taskId: messageData.taskId,\n\t                action: messageData.action,\n\t                result: result,\n\t                error: null\n\t              }, ev.origin);\n\t            }\n\t          } catch (e) {\n\t            this.sendMessage({\n\t              id: messageData.id,\n\t              taskId: messageData.taskId,\n\t              action: messageData.action,\n\t              result: null,\n\t              error: _generalUtils2.default.serializeError(e)\n\t            }, ev.origin);\n\t          }\n\t        }\n\t      } else {\n\t        this.sendMessage({\n\t          id: messageData.id,\n\t          taskId: messageData.taskId,\n\t          action: messageData.action\n\t        }, ev.origin);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Attach sendmessage and onbeforeunload event listeners\n\t     */\n\t\n\t  }, {\n\t    key: 'addListeners',\n\t    value: function addListeners() {\n\t      removeEventListener('message', this.onMessage.bind(this));\n\t      addEventListener('message', this.onMessage.bind(this));\n\t    }\n\t  }]);\n\t\n\t  return WorkerThread;\n\t}();\n\t\n\t;\n\t\n\texports.default = WorkerThread;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** super-workers.this.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e82a576883658f41d9fd\n **/","import Promise from './vendor/Promise';\n\nimport MainThread from './MainThread';\nimport WorkerThread from './WorkerThread';\n/**\n * Expose Parent and Child modules on SuperWorkers Object\n * @type {Object}\n */\nconst SuperWorkers = {\n  MainThread: MainThread,\n  WorkerThread: WorkerThread,\n  Promise: Promise\n};\n\nexport default SuperWorkers;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Inspired from - @josdejong(Github) - Promise.js\n *\n * ES6 port\n *\n * Promise polyfill\n *\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n */\nclass Promise {\n  constructor(handler) {\n    const self = this;\n    let _resolve, _reject, _process;\n\n    /**\n     * Create a cancellation error\n     * @param {String} [message]\n     * @extends Error\n     */\n    function CancellationError(message) {\n      this.message = message || 'promise cancelled';\n      this.stack = (new Error()).stack;\n    }\n\n    CancellationError.prototype = new Error();\n    CancellationError.prototype.constructor = Error;\n    CancellationError.prototype.name = 'CancellationError';\n\n    /**\n     * Create a timeout error\n     * @param {String} [message]\n     * @extends Error\n     */\n    function TimeoutError(message) {\n      this.message = message || 'timeout exceeded';\n      this.stack = (new Error()).stack;\n    }\n\n    TimeoutError.prototype = new Error();\n    TimeoutError.prototype.constructor = Error;\n    TimeoutError.prototype.name = 'TimeoutError';\n\n    this.CancellationError = CancellationError;\n    this.TimeoutError = TimeoutError;\n\n    /**\n     * Add an onFail callback to the Promise\n     * @param {Function} onFail\n     * @returns {Promise} promise\n     */\n    this['catch'] = function (onFail) {  // eslint-disable-line\n      return this.then(null, onFail);\n    };\n\n    if (!(this instanceof Promise)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (typeof handler !== 'function') {\n      throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n    }\n\n    const _onSuccess = [];\n    const _onFail = [];\n\n    /**\n     * Process onSuccess and onFail callbacks: add them to the queue.\n     * Once the promise is resolve, the function _promise is replace.\n     * @param {Function} onSuccess\n     * @param {Function} onFail\n     * @private\n     */\n    _process = (onSuccess, onFail) => {\n      _onSuccess.push(onSuccess);\n      _onFail.push(onFail);\n    };\n\n    /**\n     * Execute given callback, then call resolve/reject based on the returned result\n     * @param {Function} callback\n     * @param {Function} resolve\n     * @param {Function} reject\n     * @returns {Function}\n     * @private\n     */\n    function _then(callback, resolve, reject) {\n      return result => {\n        try {\n          const res = callback(result);\n\n          if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n            // method returned a promise\n            res.then(resolve, reject);\n          } else {\n            resolve(res);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n    }\n\n    /**\n     * Add an onSuccess callback and optionally an onFail callback to the Promise\n     * @param {Function} onSuccess\n     * @param {Function} [onFail]\n     * @returns {Promise} promise\n     */\n    this.then = (onSuccess, onFail) => new Promise((resolve, reject) => {\n      const s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      const f = onFail ? _then(onFail, resolve, reject) : reject;\n\n      _process(s, f);\n    }, self);\n\n    /**\n     * Resolve the promise\n     * @param {*} result\n     * @type {Function}\n     */\n    _resolve = result => {\n      _onSuccess.forEach(fn => {\n        fn(result);\n      });\n\n      _process = (onSuccess, onFail) => {\n        onSuccess(result);\n      };\n\n      _resolve = _reject = () => {\n        throw new Error('Promise is already resolved');\n      };\n\n      return self;\n    };\n\n    /**\n     * Reject the promise\n     * @param {Error} error\n     * @type {Function}\n     */\n    _reject = error => {\n      _onFail.forEach(fn => {\n        fn(error);\n      });\n\n      _process = (onSuccess, onFail) => {\n        onFail(error);\n      };\n\n      _resolve = _reject = () => {\n        throw new Error('Promise is already resolved');\n      };\n\n      return self;\n    };\n\n    /**\n     * Cancel te promise. This will reject the promise with a CancellationError\n     * @returns {Promise} self\n     */\n    this.cancel = () => {\n      _reject(new CancellationError());\n\n      return self;\n    };\n\n    /**\n     * Set a timeout for the promise. If the promise is not resolved within\n     * the time, the promise will be cancelled and a TimeoutError is thrown.\n     * If the promise is resolved in time, the timeout is removed.\n     * @param {number} delay     Delay in milliseconds\n     * @returns {Promise} self\n     */\n    this.timeout = delay => {\n      const timer = setTimeout(() => {\n        _reject(new TimeoutError(`Promise timed out after ${delay} ms`));\n      }, delay);\n\n      self.always(() => {\n        clearTimeout(timer);\n      });\n\n      return self;\n    };\n\n    // attach handler passing the resolve and reject functions\n    handler(result => {\n      _resolve(result);\n    }, error => {\n      _reject(error);\n    });\n  }\n\n  // TODO: add support for Promise.catch(Error, callback)\n  // TODO: add support for Promise.catch(Error, Error, callback)\n\n  /**\n   * Execute given callback when the promise either resolves or rejects.\n   * @param {Function} fn\n   * @returns {Promise} promise\n   */\n  always(fn) {\n    return this.then(fn, fn);\n  }\n\n  /**\n   * Create a promise which resolves when all provided promises are resolved,\n   * and fails when any of the promises resolves.\n   * @param {Promise[]} promises\n   * @returns {Promise} promise\n   */\n  static all(promises) {\n    return new Promise((resolve, reject) => {\n      let remaining = promises.length;\n      const results = [];\n\n      if (remaining) {\n        promises.forEach((p, i) => {\n          p.then(result => {\n            results[i] = result;\n            remaining--;\n            if (remaining === 0) {\n              resolve(results);\n            }\n          }, error => {\n            remaining = 0;\n            reject(error);\n          });\n        });\n      } else {\n        resolve(results);\n      }\n    });\n  }\n\n  /**\n   * Create a promise resolver\n   * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n   */\n  static defer() {\n    const resolver = {};\n\n    resolver.promise = new Promise((resolve, reject) => {\n      resolver.resolve = resolve;\n      resolver.reject = reject;\n    });\n\n    return resolver;\n  }\n}\n\nexport default Promise;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor/Promise.js\n **/","import RegisterWorker from './RegisterWorker';\n\nimport Promise from './vendor/Promise';\nimport TaskQueue from './TaskQueue';\n\nimport WorkerUtils from './utils/worker';\n\nimport WorkerActionEnum from './enums/WorkerActionEnum';\nimport TaskStatusEnum from './enums/TaskStatusEnum';\nimport WorkerStatusEnum from './enums/WorkerStatusEnum';\nimport WarningTextEnum from './enums/WarningTextEnum';\n\n// Named Class expression\nclass MainThread {\n  /**\n   * Involed when object is instantiated\n   * Set flags/variables and calls init method to attach event listeners\n   * @param  {Object} config - Refer API/docs for config keys\n   */\n  constructor(config) {\n    config = config || {};\n\n    if (typeof config.maxWorkers === 'undefined') {\n      config.minWorkers = 1;\n    }\n\n    if (typeof config.maxWorkers === 'undefined') {\n      config.maxWorkers = (window.navigator && window.navigator.hardwareConcurrency) || 3;\n    }\n\n    // max workers should not be less than min workers\n    config.maxWorkers = Math.max(config.maxWorkers, config.minWorkers);\n\n    // reset workers with every new Object\n    this.workers = WorkerUtils.workers = [];\n\n    Object.assign(this, config);\n    this.config = config;\n\n    WorkerUtils.config = config;\n\n    this.init();\n  };\n\n  /**\n   * Return list of all workers\n   * @return {Array}\n   */\n  getAllWorkers() {\n    return WorkerUtils.getAll();\n  };\n\n  /**\n   * Return list of all ACTIVE workers\n   * @return {Array}\n   */\n  getActiveWorkers() {\n    return WorkerUtils.getActive();\n  };\n\n  /**\n   * Return list of all IDLE workers\n   * @return {Array}\n   */\n  getIdleWorkers() {\n    return WorkerUtils.getIdle();\n  };\n\n  /**\n   * Return list of all CLOSED workers\n   * @return {Array}\n   */\n  getTerminatedWorkers() {\n    return WorkerUtils.getTerminated();\n  };\n\n  /**\n   * Terminate all workers at once\n   * @return {Object}\n   */\n  terminateAllWorkers() {\n    return WorkerUtils.terminateAll();\n  };\n\n  /**\n   * Terminate a specific worker\n   * @return {Object}\n   */\n  terminateWorker(id) {\n    return WorkerUtils.terminate(id);\n  };\n\n  /**\n   * Send a postmessage to all ACTIVE workers\n   * @return {Object}\n   */\n  broadCastAll(msg) {\n    return WorkerUtils.broadCastAll(msg);\n  };\n\n  /**\n   * Send a postmessage to a specific worker\n   * @return {Object}\n   */\n  broadCastTo(id, msg) {\n    return WorkerUtils.broadCastTo(id, msg);\n  };\n\n  /**\n   * API methods exposed for Public ends here\n   **/\n\n  exec(method, params, config) {\n    // validate type of arguments\n    if (params && !Array.isArray(params)) {\n      throw new TypeError('Array expected as argument \"params\"');\n    }\n\n    if (!config) {\n      config = {};\n    }\n\n    let resolver = Promise.defer();\n\n    let task = {};\n\n    Object.assign(task, config);\n    Object.assign(task, {\n      method: method,\n      params: params,\n      resolver: resolver,\n      priority: (config && config.priority) || TaskStatusEnum.LOW\n    });\n\n    this.taskQueue._add(task);\n    this._runQueuedTask();\n\n    return resolver.promise;\n  };\n\n  _runQueuedTask() {\n    if (!this.taskQueue.tasks.length) {\n      // Wait for some time for resolve/reject promises\n      setTimeout(() => {\n        WorkerUtils.terminateAllExceptOne(this.config.minWorkers);\n      }, 1000);\n    }\n\n    let nextQueuedTask = this.taskQueue.getNextTask(),\n      availableWorker = WorkerUtils.getIdle()[0];\n\n    if (!availableWorker && (WorkerUtils.getActive().length + WorkerUtils.getIdle().length < this.config.maxWorkers)) {\n      // create a new worker\n      this.register();\n      availableWorker = WorkerUtils.getIdle()[0];\n    }\n\n    if (availableWorker) {\n      nextQueuedTask.runningOnWorkerId = availableWorker.id;\n\n      // remove the task from queue list\n      this.taskQueue._remove(nextQueuedTask.id);\n      // if task is not already completed\n      if (nextQueuedTask.status === TaskStatusEnum.QUEUED) {\n        availableWorker.status = WorkerStatusEnum.ACTIVE;\n        // send the request to worker to execute\n        availableWorker.worker.sendMessage(\n          availableWorker.worker, {\n            id: availableWorker.id,\n            resolver: nextQueuedTask.resolver,\n            taskId: nextQueuedTask.id,\n            method: nextQueuedTask.method,\n            params: nextQueuedTask.params,\n            action: WorkerActionEnum.EXEC\n          }\n        ).then((data) => {\n          availableWorker.status = WorkerStatusEnum.IDLE;\n          if (data) {\n            this._runQueuedTask(); // trigger next task in the queue\n          }\n        })\n        .catch((e) => {\n          // if the worker crashed and terminated, remove it from the pool\n          if (availableWorker.status === WorkerStatusEnum.TERMINATED) {\n            WorkerUtils.terminate(availableWorker.id);\n            // If minWorkers set, spin up new workers to replace the crashed ones\n            if (this.config.minWorkers) {\n              this._ensureMinWorkers();\n            }\n          }\n          this._runQueuedTask(); // trigger next task in the queue\n        });\n      }\n    }\n  };\n\n  _ensureMinWorkers() {\n    for (let i = this.workers.length; i < this.config.minWorkers; i++) {\n      this.register();\n    }\n  };\n\n  /**\n   * Register a new worker. Config has to be passed with some required keys\n   * @return {Object} worker\n   */\n  register() {\n    let config = this.config;\n\n    if (!config) {\n      throw new Error(WarningTextEnum.CONFIG_REQUIRED);\n    }\n\n    let url = config.url;\n\n    if (!url) {\n      throw new Error(WarningTextEnum.URL_REQUIRED);\n    }\n\n    let worker = new RegisterWorker(config);\n\n    return worker;\n  };\n\n  /**\n   * Invoked on object instantiation unless user pass a key to call it explicitly\n   */\n  init() {\n    if (!WorkerUtils._isWebWorkerSupported()) {\n      console.warn(WarningTextEnum.WORKER_NOT_SUPPORTED);\n      return;\n    }\n\n    this.taskQueue = TaskQueue;\n    this.taskQueue.tasks = [];\n  };\n};\n\nexport default MainThread;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/MainThread.js\n **/","import UUID from './vendor/uuid';\nimport TaskQueue from './TaskQueue';\nimport WorkerUtils from './utils/worker';\nimport GeneralUtils from './utils/generalUtils';\nimport WorkerStatusEnum from './enums/WorkerStatusEnum';\nimport WorkerActionEnum from './enums/WorkerActionEnum';\n\n// Named Class expression\nclass RegisterWorker {\n  /**\n   * Invoked when the object is instantiated\n   */\n  constructor(config) {\n    this.init(config);\n  };\n  // reject all running tasks on worker error\n  onError(error) {\n    this.status = WorkerStatusEnum.TERMINATED;\n    let activeTasks = TaskQueue.getActive(),\n      activeTasksRunningOnWorker = [];\n\n    if (activeTasks && activeTasks.length) {\n      activeTasksRunningOnWorker = activeTasks.filter(task => task.runningOnWorkerId === this.id);\n    }\n\n    for (let i = 0; i < activeTasksRunningOnWorker.length; i++) {\n      activeTasksRunningOnWorker[i].resolver.reject(error);\n    }\n\n    return activeTasksRunningOnWorker;\n  };\n\n   /**\n   * Attach postmessage, native and custom listeners to the window\n   */\n  addEventListeners() {\n    this.worker.addEventListener('message', this.onWorkerMessage.bind(this), false);\n    // listen for worker messages error\n    this.worker.addEventListener('error', this.onError.bind(this));\n    // listen for worker messages exit\n    this.worker.addEventListener('exit', () => {\n      let error = new Error('Worker terminated unexpectedly');\n\n      this.onError(error).bind(this);\n    });\n  };\n\n  onWorkerMessage(ev) {\n    if (!ev || !ev.data || ev.data.action !== WorkerActionEnum.EXEC) {\n      return false;\n    }\n\n    let task = TaskQueue._getCompleted(ev.data.taskId);\n\n    if (ev.data.error) {\n      task.resolver.reject(GeneralUtils.deSerializeError(ev.data.error));\n      this.totalJobsFailed += 1;\n      this.lastJobFaileddAt = +new Date();\n      if (task.onError && typeof task.onError === 'function') {\n        task.onError();\n      }\n      return false;\n    }\n    task.resolver.resolve(ev.data.result);\n    this.totalJobsCompleted += 1;\n    this.lastJobCompletedAt = +new Date();\n    if (task.onSuccess && typeof task.onSuccess === 'function') {\n      task.onSuccess();\n    }\n    return true;\n  };\n  /**\n   * Open a new tab\n   * @param  {Object} config - Refer API for config keys\n   * @return {Object} this\n   */\n  init(config) {\n    config = config || {};\n\n    Object.assign(this, config);\n    this.id = UUID.generate() || (WorkerUtils.workers.length + 1);\n    this.status = WorkerStatusEnum.IDLE;\n    this.createdAt = +new Date();\n    this.lastJobCompletedAt = null;\n    this.totalJobsCompleted = 0;\n    this.totalJobsFailed = 0;\n\n    this.worker = new Worker(config.url);\n\n    WorkerUtils.sendMessage(this.worker, {\n      id: this.id,\n      action: WorkerActionEnum.READY,\n      message: 'Worker is ready.'\n    });\n\n    // TODO: only add methods which are needed\n    Object.assign(this.worker, {\n      sendMessage: WorkerUtils.sendMessage\n    });\n\n    // Add Worker event-listeners\n    this.addEventListeners();\n\n    // Push it to the list of workers\n    WorkerUtils.addNew(this);\n\n     // Return reference for chaining purpose\n    return this;\n  };\n};\n\nexport default RegisterWorker;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/RegisterWorker.js\n **/","/**\n * UUID.js: The RFC-compliant UUID generator for JavaScript.\n * ES6 port of only `generate` method of UUID by Varun Malhotra under MIT License\n *\n * @author  LiosK\n * @version v3.3.0\n * @license The MIT License: Copyright (c) 2010-2016 LiosK.\n */\n\n/** @constructor */\nlet UUID;\n\nUUID = (function () {\n  'use strict';\n\n  /** @lends UUID */\n  function UUID() {}\n\n  /**\n   * The simplest function to get an UUID string.\n   * @returns {string} A version 4 UUID string.\n   */\n  UUID.generate = function () {\n    let rand = UUID._getRandomInt, hex = UUID._hexAligner;\n\n    // [\"timeLow\", \"timeMid\", \"timeHiAndVersion\", \"clockSeqHiAndReserved\", \"clockSeqLow\", \"node\"]\n    return hex(rand(32), 8) +           // time_low\n      '-' +\n      hex(rand(16), 4) +                // time_mid\n      '-' +\n      hex(0x4000 | rand(12), 4) +       // time_hi_and_version\n      '-' +\n      hex(0x8000 | rand(14), 4) +       // clock_seq_hi_and_reserved clock_seq_low\n      '-' +\n      hex(rand(48), 12);                // node\n  };\n\n  /**\n   * Returns an unsigned x-bit random integer.\n   * @param {int} x A positive integer ranging from 0 to 53, inclusive.\n   * @returns {int} An unsigned x-bit random integer (0 <= f(x) < 2^x).\n   */\n  UUID._getRandomInt = function (x) {\n    if (x < 0) {\n      return NaN;\n    }\n    if (x <= 30) {\n      return (0 | Math.random() * (1 << x));\n    }\n    if (x <= 53) {\n      return (0 | Math.random() * (1 << 30)) +\n        (0 | Math.random() * (1 << x - 30)) * (1 << 30);\n    }\n\n    return NaN;\n  };\n\n  /**\n   * Returns a function that converts an integer to a zero-filled string.\n   * @param {int} radix\n   * @returns {function(num&#44; length)}\n   */\n  UUID._getIntAligner = function (radix) {\n    return function (num, length) {\n      let str = num.toString(radix), i = length - str.length, z = '0';\n\n      for (; i > 0; i >>>= 1, z += z) {\n        if (i & 1) {\n          str = z + str;\n        }\n      }\n      return str;\n    };\n  };\n\n  UUID._hexAligner = UUID._getIntAligner(16);\n\n  /**\n   * Returns UUID string representation.\n   * @returns {string} {@link UUID#hexString}.\n   */\n  UUID.prototype.toString = function () {\n    return this.hexString;\n  };\n\n  return UUID;\n\n})(UUID);\n\nexport default UUID;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor/uuid.js\n **/","import UUID from './vendor/uuid';\nimport ArrayUtils from './utils/array';\nimport TaskStatusEnum from './enums/TaskStatusEnum';\n\nlet TaskQueue = {\n  config: {},\n  tasks: [],\n  completedTasks: [],\n\n  /**\n   * Add task to the queue\n   * @param {Object} task - with proper config\n   */\n  _add: (task) => {\n    if (!task) { throw new Error('No task passed for queuing'); }\n\n    if (Object.prototype.toString.call(task) !== '[object Object]') {\n      throw new Error('Task should be an object');\n    }\n\n    task.id = UUID.generate() || TaskQueue.tasks.length;\n    task.status = TaskStatusEnum.QUEUED;\n    TaskQueue.tasks.push(task);\n  },\n  _addToCompletedList: (task) => {\n    if (!task) { throw new Error('No task passed for queuing'); }\n\n    if (Object.prototype.toString.call(task) !== '[object Object]') { throw new Error('Task should be an object'); }\n\n    TaskQueue.completedTasks.push(task);\n  },\n  /**\n   * Remove a task from the queue\n   * @param {Number} task\n   */\n  _remove: (id) => {\n    if (!id) { throw new Error('No id passed'); }\n\n    let task;\n\n    task = ArrayUtils.searchByKeyName(TaskQueue.tasks, 'id', id, 'both');\n    TaskQueue._addToCompletedList(task.obj);\n    if (task.index !== -1) {\n      TaskQueue.tasks.splice(task.index, 1);\n    }\n\n    return this;\n  },\n  _getCompleted: (id) => {\n    if (!id) { throw new Error('No id passed'); }\n\n    let task = ArrayUtils.searchByKeyName(TaskQueue.completedTasks, 'id', id);\n\n    return task || {};\n  },\n  /**\n   * Get the task from the queue\n   * @param {id} task\n   * @return {Object} task being queried or an empty Object(if not found)\n   */\n  get: (id) => {\n    if (!id) { return TaskQueue.tasks[0] || {}; }\n\n    let task = ArrayUtils.searchByKeyName(TaskQueue.tasks, 'id', id);\n\n    return task || {};\n  },\n  /**\n   * Get next available task from the queue\n   * @return {Object} task being queried or an empty Object(if not found)\n   */\n  getNextTask: () => {\n    // Sort as per task priorities\n    ArrayUtils.sortOnStringType(TaskQueue.tasks, 'priority');\n    return TaskQueue.get();\n  },\n  /**\n   * Filter out all the active tasks\n   * @return {Array} - only the active tasks\n   */\n  getActive: () => {\n    return TaskQueue.tasks.filter(task => task.status === TaskStatusEnum.ACTIVE);\n  },\n  /**\n   * Filter out all the completed tasks\n   * @return {Array} - only the completed tasks\n   */\n  getCompleted: () => {\n    return TaskQueue.tasks.filter(task => task.status === TaskStatusEnum.COMPLETED);\n  },\n  /**\n   * Filter out all the failed tasks\n   * @return {Array} - only the failed tasks\n   */\n  getFailed: () => {\n    return TaskQueue.tasks.filter(task => task.status === TaskStatusEnum.FAILED);\n  },\n  /**\n   * To get list of all tasks\n   * @return {Array} - list of all tasks\n   */\n  getAll: () => {\n    return TaskQueue.tasks;\n  }\n};\n\nexport default TaskQueue;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TaskQueue.js\n **/","let ArrayUtils = {};\n\n/**\n * Different type of data needed after searching an item(Object) within data(Array of Objects).\n * 1. `INDEX` returns just the index at which the item was present\n * 2. `OBJECT` returns the matched object\n * 3. `BOTH` returns an object { obj: matched_object, index: index_found }\n */\nlet returnPreferenceEnum = {\n  INDEX: 'index',\n  OBJECT: 'object',\n  BOTH: 'both'\n};\n\n/**\n * Search for an item(Object) within a data-set(Array Of Objects)\n * @param  {Array of Objects} data\n * @param  {String} key - Unique key to search on the basis of\n * @param  {String} value - The matching criteria\n * @param  {String} returnPreference - what kind of output is needed\n * @return {Object}\n */\nArrayUtils.searchByKeyName = (data, key, value, returnPreference) => {\n  if (!data || !key) { return false; }\n\n  returnPreference = returnPreference || returnPreferenceEnum[1]; // default to Object\n  let i, obj, returnData, index = -1;\n\n  for (i = 0; i < data.length; i++) {\n    obj = data[i];\n    // Number matching support\n    if (!isNaN(value) && obj && parseInt(obj[key], 10) === parseInt(value, 10)) {\n      index = i;\n      break;\n    } else if (isNaN(value) && obj && obj[key] === value) { // String exact matching support\n      index = i;\n      break;\n    }\n  }\n\n  if (index === -1) { // item not found\n    data[index] = {}; // for consistency\n  }\n\n  switch (returnPreference) {\n    case returnPreferenceEnum.INDEX:\n      returnData = index;\n      break;\n    case returnPreferenceEnum.BOTH:\n      returnData = {\n        obj: data[index],\n        index: index\n      };\n      break;\n    case returnPreferenceEnum.OBJECT:\n    default:\n      returnData = data[index];\n      break;\n  }\n\n  return returnData;\n};\n\n/**\n * Sort array based on key defined.\n * @param {Array} arr - Array to be sorted\n * @param {String} key - key on which sort is required\n * @param {Boolean} orederBy - Sort in asc/desc order. If nothing is specified, it's ascending order.\n */\nArrayUtils.sortOn = (arr, key, orderBy) => {\n  arr.sort(function (a, b) {\n    return orderBy ? b[key] - a[key] : a[key] - b[key];\n  });\n};\n\n/**\n * Sort array based on key:String defined.\n * @param {Array} arr - Array to be sorted\n * @param {String} key - key on which sort is required\n * @param {Boolean} orederBy - Sort in asc/desc order. If nothing is specified, it's ascending order.\n */\nArrayUtils.sortOnStringType = (arr, key) => {\n  arr.sort(function (a, b) {\n    if (a[key] < b[key]) {\n      return -1;\n    } else if (a[key] > b[key]) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nexport default ArrayUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/array.js\n **/","/**\n * Enum for Worker status(still active / idle) used for client-worker-communication\n * @type {Object}\n */\nconst TaskStatusEnum = {\n  QUEUED: 'queued',\n  ACTIVE: 'active',\n  FAILED: 'failed',\n  COMPLETED: 'completed'\n};\n\nexport default TaskStatusEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/TaskStatusEnum.js\n **/","/**\n * A Tab utility file to deal with tab operations\n */\nimport Promise from '../vendor/Promise';\nimport ArrayUtils from './array';\nimport GeneralUtils from './generalUtils';\n\nimport WorkerStatusEnum from '../enums/WorkerStatusEnum';\nimport WarningTextEnum from '../enums/WarningTextEnum';\n\nlet WorkerUtils = {\n  workers: [],\n  config: {},\n\n  /**\n   * Check is worker is present on window\n   * @return {Boolean} [description]\n   */\n  _isWebWorkerSupported: () => {\n    if (typeof window.Worker === 'function' ||\n      (typeof window.Worker === 'object' || typeof Worker.prototype.constructor === 'function')) {\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Remove a tab from a list of all workers.\n   * This is required when users opts for removing the idle workers from the list of workers.\n   * This can be done explictly by passing `removeidleworkers` key while instantiating Parent.\n   * @param  {Object} tab\n   */\n  _remove: (worker) => {\n    let index;\n\n    index = ArrayUtils.searchByKeyName(WorkerUtils.workers, 'id', worker.id, 'index');\n    WorkerUtils.workers.splice(index, 1);\n  },\n\n  /**\n   * Add a new worker to the Array of workers\n   * @param  {Object} worker\n   * @return {Object} - this\n   */\n  addNew: (worker) => {\n    WorkerUtils.workers.push(worker);\n    return this;\n  },\n  /**\n   * Filter out all the active workers\n   * @return {Array} - only the active workers\n   */\n  getActive: () => {\n    return WorkerUtils.workers.filter(worker => worker.status === WorkerStatusEnum.ACTIVE);\n  },\n  /**\n   * Filter out all the idle workers\n   * @return {Array} - only the idle workers\n   */\n  getIdle: () => {\n    return WorkerUtils.workers.filter(worker => worker.status === WorkerStatusEnum.IDLE);\n  },\n  /**\n   * Filter out all the terminated workers\n   * @return {Array} - only the idle workers\n   */\n  getTerminated: () => {\n    return WorkerUtils.workers.filter(worker => worker.status === WorkerStatusEnum.TERMINATED);\n  },\n  /**\n   * To get list of all workers(idle/active).\n   * Note: idle workers will not be returned if `removeidleworkers` key is paased while instantiaiting Parent.\n   * @return {Array} - list of all workers\n   */\n  getAll: () => {\n    return WorkerUtils.workers;\n  },\n\n  /**\n   * Terminate a specific tab\n   * @param  {String} id\n   * @return {Object} this\n   */\n  terminate: (id) => {\n    if (!id) {\n      console.warn(WarningTextEnum.NO_ID_PROVIDED);\n      return WorkerUtils;\n    }\n\n    let worker = ArrayUtils.searchByKeyName(WorkerUtils.workers, 'id', id, 'object');\n\n    if (worker && worker.worker &&\n      worker.status === WorkerStatusEnum.TERMINATED\n    ) {\n      console.warn(WarningTextEnum.WORKER_ALREADY_TERMINATED);\n      return WorkerUtils;\n    }\n\n    if (worker && worker.worker &&\n      worker.worker.terminate\n    ) {\n      worker.worker.terminate();\n      worker.status = WorkerStatusEnum.TERMINATED;\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Terminate all (active+idle) workers using a native method `Terminate` available on window.open reference.\n   * @return {WorkerUtils} this\n   */\n  terminateAllExceptOne: (minWorkers) => {\n    return WorkerUtils.terminateAll(true, minWorkers || 1);\n  },\n  /**\n   * Terminate all active workers using a native method `Terminate` available on window.open reference.\n   * @return {WorkerUtils} this\n   */\n  terminateAll: (exceptOne, minWorkers) => {\n    let i,\n      nonTerminatedWorkers;\n\n    if (exceptOne) {\n      // terminate only idle workers\n      nonTerminatedWorkers = [].concat(WorkerUtils.getIdle());\n    } else {\n      nonTerminatedWorkers = [].concat(WorkerUtils.getActive()).concat(WorkerUtils.getIdle());\n    }\n\n    for (i = 0; i < nonTerminatedWorkers.length; i++) {\n      // ensure minWorkers should be there\n      if (exceptOne && WorkerUtils.getIdle() && WorkerUtils.getIdle().length <= minWorkers) {\n        return WorkerUtils;\n      }\n\n      if (nonTerminatedWorkers[i] &&\n        nonTerminatedWorkers[i].worker &&\n        nonTerminatedWorkers[i].worker.terminate\n      ) {\n        nonTerminatedWorkers[i].worker.terminate();\n        nonTerminatedWorkers[i].status = WorkerStatusEnum.TERMINATED;\n      }\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Send a postmessage to every active Child tab(excluding itself i.e Parent Tab)\n   * @param  {String} config\n   */\n  broadCastAll: (config) => {\n    let i, workers = WorkerUtils.getActive() || [];\n\n    for (i = 0; i < workers.length; i++) {\n      WorkerUtils.sendMessage(workers[i], config);\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Send a postmessage to a specific Child tab\n   * @param  {String} id\n   * @param  {String} config\n   */\n  broadCastTo: (id, config) => {\n    let targetedWorker,\n      workers = [].concat(WorkerUtils.getActive()).concat(WorkerUtils.getIdle());\n\n    targetedWorker = ArrayUtils.searchByKeyName(workers, 'id', id);\n    if (targetedWorker) {\n      WorkerUtils.sendMessage(targetedWorker, config);\n    }\n\n    return WorkerUtils;\n  },\n  /**\n   * Send a postMessage to the desired window/frame\n   * @param  {Object}  target\n   * @param  {String}  msg\n   */\n  sendMessage: (target, config) => {\n    let msg,\n      isEncodedMethod = false;\n\n    config = config || {};\n    if (config.method && typeof config.method === 'function') {\n      config.method = GeneralUtils.serializeFunction(config.method);\n      isEncodedMethod = true;\n    }\n\n    if (!config.resolver) {\n      config.resolver = Promise.defer();\n    }\n\n    msg = {\n      id: config.id,\n      taskId: config.taskId,\n      method: config.method,\n      params: config.params,\n      action: config.action,\n      isEncodedMethod\n    };\n\n    msg = GeneralUtils.stringifyJson(msg);\n\n    if (target && target.postMessage) {\n      target.postMessage(msg);\n    }\n\n    return config.resolver.promise;\n  }\n};\n\nexport default WorkerUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/worker.js\n **/","import WarningTextEnum from '../enums/WarningTextEnum';\n\nlet GeneralUtils = {\n  isPromise: (value) => {\n    return value && (typeof value.then === 'function');\n  },\n  serializeFunction: (fn) => {\n    if (!fn || typeof fn !== 'function') { return false; }\n\n    return encodeURI(fn.toString());\n  },\n  deSerializeFunction: (fn) => {\n    if (!fn || typeof fn !== 'string') { return false; }\n\n    return decodeURI(fn);\n  },\n  serializeError: (error) => {\n    let i, err = {},\n      errProps = [ 'name', 'message', 'stack', 'custom' ];\n\n    if (error instanceof Error) {\n      for (i = errProps.length - 1; i >= 0; i--) {\n        err[errProps[i]] = error[errProps[i]];\n      }\n      return err;\n    }\n\n    return err;\n  },\n  deSerializeError: (error) => {\n    let i, fakeError = new Error('');\n\n    if (!error) {\n      return fakeError;\n    }\n\n    let props = Object.keys(error);\n\n    for (i = 0; i < props.length; i++) {\n      fakeError[props[i]] = error[props[i]];\n    }\n\n    return fakeError;\n  },\n  /**\n   * Stringify Object\n   * @param  {String} data\n   * @param  {String} err  - Message to be thrown if not valid object\n   * @return {Object}      - stringified json\n   */\n  stringifyJson: function (data, err) {\n    err = err || WarningTextEnum.INVALID_JSON;\n    try {\n      data = JSON.stringify(data);\n    } catch (e) {\n      console.warn(err);\n    }\n\n    return data;\n  },\n  /**\n   * Parse sringified data\n   * @param  {String} data\n   * @param  {String} err  - Message to be thrown if not valid json\n   * @return {Object}      - parsed json\n   */\n  parseJson: function (data, err) {\n    let jsonParsedData;\n\n    err = err || WarningTextEnum.PARSE_JSON;\n    try {\n      jsonParsedData = JSON.parse(data);\n    } catch (e) {\n      console.warn(err);\n    }\n\n    return jsonParsedData;\n  }\n};\n\nexport default GeneralUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/generalUtils.js\n **/","/**\n * Enum for showing various warnings to suser when things done wrong\n * @type {Object}\n */\nconst WarningTextEnum = {\n  INVALID_JSON: 'Invalid JSON Object!',\n  PARSE_JSON: 'Can not parse stringifed data',\n  NO_ID_PROVIDED: 'Valid worker id should be provided',\n  INVALID_DATA: 'Some wrong message is being sent by Parent.',\n  WORKER_ALREADY_TERMINATED: 'Web Worker has already been terminated.',\n  CONFIG_REQUIRED: 'Configuration options required. Please read docs.',\n  WORKER_NOT_SUPPORTED: 'Web Worker not supported on this browser version',\n  URL_REQUIRED: 'Url is needed for creating and opening a new window/tab. Please read docs.'\n};\n\nexport default WarningTextEnum;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WarningTextEnum.js\n **/","/**\n * Enum for Worker status(still active / idle) used for client-worker-communication\n * @type {Object}\n */\nconst WorkerStatusEnum = {\n  IDLE: 'idle',\n  ACTIVE: 'active',\n  TERMINATED: 'terminated'\n};\n\nexport default WorkerStatusEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WorkerStatusEnum.js\n **/","/**\n * Enum for Worker action\n * @type {Object}\n */\nconst WorkerActionEnum = {\n  READY: 'ready',\n  EXEC: 'execute'\n};\n\nexport default WorkerActionEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WorkerActionEnum.js\n **/","import GeneralUtils from './utils/generalUtils';\nimport WorkerActionEnum from './enums/WorkerActionEnum';\n\n// Named Class expression\nclass WorkerThread {\n  /**\n   * Involed when object is instantiated\n   * Set flags/variables and calls init method to attach event listeners\n   * @param  {Object} config - Refer API/docs for config keys\n   */\n  constructor(config) {\n    if (!config) {\n      config = {};\n    }\n\n    Object.assign(this, config);\n    this.config = config;\n\n    this.methods = {};\n    if (!config.unlistenEvents) {\n      this.addListeners();\n    }\n  };\n\n  sendMessage(obj, origin) {\n    if (origin) {\n      postMessage(obj, origin);\n    } else {\n      postMessage(obj);\n    }\n  };\n\n  exposeMethods(methods) {\n    if (!methods || Object.prototype.toString.call(methods) !== '[object Object]') {\n      throw new Error('ExposeMethods function expects object');\n    }\n\n    for (let method in methods) {\n      let fn = methods[method];\n\n      if (methods.hasOwnProperty(method) && typeof fn === 'function') {\n        this.methods[method] = fn;\n      }\n    }\n  }\n\n  onMessage(ev) {\n    let result, messageData;\n\n    messageData = GeneralUtils.parseJson(ev.data) || {};\n    if (messageData && messageData.action === WorkerActionEnum.EXEC) {\n      if (messageData.method) {\n        let _params = messageData.params;\n\n        try {\n          let _fn, method;\n\n          if (messageData.isEncodedMethod) {\n            _fn = GeneralUtils.deSerializeFunction(messageData.method);\n          } else {\n            _fn = this.methods[messageData.method];\n          }\n\n          method = eval('(' + _fn + ')'); // eslint-disable-line\n\n          result = method.apply(method, _params);\n          if (GeneralUtils.isPromise(result)) {\n            result.then((thenResult) => {\n              this.sendMessage({\n                id: messageData.id,\n                taskId: messageData.taskId,\n                action: messageData.action,\n                result: thenResult,\n                error: null\n              }, ev.origin);\n            })\n            .catch((e) => {\n              this.sendMessage({\n                id: messageData.id,\n                taskId: messageData.taskId,\n                action: messageData.action,\n                result: null,\n                error: GeneralUtils.serializeError(e)\n              }, ev.origin);\n            });\n          } else {\n            this.sendMessage({\n              id: messageData.id,\n              taskId: messageData.taskId,\n              action: messageData.action,\n              result: result,\n              error: null\n            }, ev.origin);\n          }\n        } catch (e) {\n          this.sendMessage({\n            id: messageData.id,\n            taskId: messageData.taskId,\n            action: messageData.action,\n            result: null,\n            error: GeneralUtils.serializeError(e)\n          }, ev.origin);\n        }\n      }\n    } else {\n      this.sendMessage({\n        id: messageData.id,\n        taskId: messageData.taskId,\n        action: messageData.action\n      }, ev.origin);\n    }\n  }\n\n  /**\n   * Attach sendmessage and onbeforeunload event listeners\n   */\n  addListeners() {\n    removeEventListener('message', this.onMessage.bind(this));\n    addEventListener('message', this.onMessage.bind(this));\n  };\n\n  /**\n   * API starts here ->\n   */\n\n  /**\n   * API ends here ->\n   */\n};\n\nexport default WorkerThread;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/WorkerThread.js\n **/"],"sourceRoot":""}